{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apiRouter = _interopRequireDefault(require(\"./api-v1/api-router\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _auth = _interopRequireDefault(require(\"./api-v1/paths/auth\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_auth[\"default\"].initialize());\napp.use(\"/api/v1\", _apiRouter[\"default\"]);\napp.listen(3001, function () {\n  console.log(\"servidor funcionando na porta 3001\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJhdXRoIiwiaW5pdGlhbGl6ZSIsImFwaVJvdXRlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFVQyxJQUFWLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFVRSxVQUFWLENBQXFCO0FBQUNDLEVBQUFBLFFBQVEsRUFBRztBQUFaLENBQXJCLENBQVI7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVFLLGlCQUFLQyxVQUFMLEVBQVI7QUFFQVAsR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBUixFQUFrQk8scUJBQWxCO0FBR0FSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLElBQVgsRUFBZ0IsWUFBSTtBQUNoQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0NBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBhcGlSb3V0ZXIgZnJvbSBcIi4vYXBpLXYxL2FwaS1yb3V0ZXJcIjtcclxuaW1wb3J0IGJvZHlQYXJzZSBmcm9tIFwiYm9keS1wYXJzZXJcIjtcclxuaW1wb3J0IGF1dGggIGZyb20gXCIuL2FwaS12MS9wYXRocy9hdXRoXCI7XHJcblxyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2UuanNvbigpKTtcclxuYXBwLnVzZShib2R5UGFyc2UudXJsZW5jb2RlZCh7ZXh0ZW5kZWQgOiBmYWxzZX0pKTtcclxuYXBwLnVzZShhdXRoLmluaXRpYWxpemUoKSk7XHJcblxyXG5hcHAudXNlKFwiL2FwaS92MVwiLGFwaVJvdXRlcik7XHJcblxyXG5cclxuYXBwLmxpc3RlbigzMDAxLCgpPT57XHJcbiAgICBjb25zb2xlLmxvZyhcInNlcnZpZG9yIGZ1bmNpb25hbmRvIG5hIHBvcnRhIDMwMDFcIik7XHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParse",
        "json",
        "urlencoded",
        "extended",
        "auth",
        "initialize",
        "apiRouter",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAUC,IAAV,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAUE,UAAV,CAAqB;AAACC,EAAAA,QAAQ,EAAG;AAAZ,CAArB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQK,iBAAKC,UAAL,EAAR;AAEAP,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAkBO,qBAAlB;AAGAR,GAAG,CAACS,MAAJ,CAAW,IAAX,EAAgB,YAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH,CAFD",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src",
      "sourcesContent": [
        "import express from \"express\";\r\nimport apiRouter from \"./api-v1/api-router\";\r\nimport bodyParse from \"body-parser\";\r\nimport auth  from \"./api-v1/paths/auth\";\r\n\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParse.json());\r\napp.use(bodyParse.urlencoded({extended : false}));\r\napp.use(auth.initialize());\r\n\r\napp.use(\"/api/v1\",apiRouter);\r\n\r\n\r\napp.listen(3001,()=>{\r\n    console.log(\"servidor funcionando na porta 3001\");\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128385
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\api-router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\api-router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\api-router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\api-router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1",
        "sourceFileName": "api-router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _loginRouter = _interopRequireDefault(require(\"./paths/login-router\"));\n\nvar _pessoaRouter = _interopRequireDefault(require(\"./paths/pessoa-router\"));\n\nvar _transferenciaRouter = _interopRequireDefault(require(\"./paths/transferencia-router\"));\n\nvar _recompensaRouter = _interopRequireDefault(require(\"./paths/recompensa-router\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar apiRouter = _express[\"default\"].Router();\n\napiRouter.use('/login', _loginRouter[\"default\"]);\napiRouter.use(\"/pessoas\", _pessoaRouter[\"default\"]);\napiRouter.use(\"/recompensas\", _recompensaRouter[\"default\"]);\napiRouter.use(\"/transferencias\", _transferenciaRouter[\"default\"]);\napiRouter.use(\"/\", function (req, resp, next) {\n  resp.send(\" API V1\");\n});\nvar _default = apiRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS1yb3V0ZXIuanMiXSwibmFtZXMiOlsiYXBpUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImxvZ2luUm91dGVyIiwicGVzc29hUm91dGVyIiwicmVjb21wZW5zYVJvdXRlciIsInRyYW5zZmVyZW5jaWFSb3V0ZXIiLCJyZXEiLCJyZXNwIiwibmV4dCIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbEI7O0FBRUFGLFNBQVMsQ0FBQ0csR0FBVixDQUFjLFFBQWQsRUFBd0JDLHVCQUF4QjtBQUNBSixTQUFTLENBQUNHLEdBQVYsQ0FBYyxVQUFkLEVBQTJCRSx3QkFBM0I7QUFDQUwsU0FBUyxDQUFDRyxHQUFWLENBQWMsY0FBZCxFQUE4QkcsNEJBQTlCO0FBQ0FOLFNBQVMsQ0FBQ0csR0FBVixDQUFlLGlCQUFmLEVBQWtDSSwrQkFBbEM7QUFDQVAsU0FBUyxDQUFDRyxHQUFWLENBQWMsR0FBZCxFQUFtQixVQUFDSyxHQUFELEVBQU1DLElBQU4sRUFBV0MsSUFBWCxFQUFtQjtBQUVsQ0QsRUFBQUEsSUFBSSxDQUFDRSxJQUFMLENBQVUsU0FBVjtBQUNILENBSEQ7ZUFTZVgsUyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERlbGxcXFJlcG9zXFxhcGktbWVyaXRpLW1vbmV5XFxzcmNcXGFwaS12MSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBsb2dpblJvdXRlciBmcm9tIFwiLi9wYXRocy9sb2dpbi1yb3V0ZXJcIjtcclxuaW1wb3J0IHBlc3NvYVJvdXRlciBmcm9tIFwiLi9wYXRocy9wZXNzb2Etcm91dGVyXCI7XHJcbmltcG9ydCB0cmFuc2ZlcmVuY2lhUm91dGVyIGZyb20gXCIuL3BhdGhzL3RyYW5zZmVyZW5jaWEtcm91dGVyXCI7XHJcbmltcG9ydCByZWNvbXBlbnNhUm91dGVyIGZyb20gXCIuL3BhdGhzL3JlY29tcGVuc2Etcm91dGVyXCI7XHJcblxyXG5jb25zdCBhcGlSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuYXBpUm91dGVyLnVzZSgnL2xvZ2luJywgbG9naW5Sb3V0ZXIpO1xyXG5hcGlSb3V0ZXIudXNlKFwiL3Blc3NvYXNcIiAsIHBlc3NvYVJvdXRlcik7XHJcbmFwaVJvdXRlci51c2UoXCIvcmVjb21wZW5zYXNcIiAscmVjb21wZW5zYVJvdXRlcik7XHJcbmFwaVJvdXRlci51c2UgKFwiL3RyYW5zZmVyZW5jaWFzXCIsIHRyYW5zZmVyZW5jaWFSb3V0ZXIpO1xyXG5hcGlSb3V0ZXIudXNlKFwiL1wiLCAocmVxICxyZXNwLG5leHQpID0+e1xyXG5cclxuICAgIHJlc3Auc2VuZChcIiBBUEkgVjFcIilcclxufSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBpUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api-router.js"
      ],
      "names": [
        "apiRouter",
        "express",
        "Router",
        "use",
        "loginRouter",
        "pessoaRouter",
        "recompensaRouter",
        "transferenciaRouter",
        "req",
        "resp",
        "next",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,GAAGC,oBAAQC,MAAR,EAAlB;;AAEAF,SAAS,CAACG,GAAV,CAAc,QAAd,EAAwBC,uBAAxB;AACAJ,SAAS,CAACG,GAAV,CAAc,UAAd,EAA2BE,wBAA3B;AACAL,SAAS,CAACG,GAAV,CAAc,cAAd,EAA8BG,4BAA9B;AACAN,SAAS,CAACG,GAAV,CAAe,iBAAf,EAAkCI,+BAAlC;AACAP,SAAS,CAACG,GAAV,CAAc,GAAd,EAAmB,UAACK,GAAD,EAAMC,IAAN,EAAWC,IAAX,EAAmB;AAElCD,EAAAA,IAAI,CAACE,IAAL,CAAU,SAAV;AACH,CAHD;eASeX,S",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1",
      "sourcesContent": [
        "import express from \"express\";\r\nimport loginRouter from \"./paths/login-router\";\r\nimport pessoaRouter from \"./paths/pessoa-router\";\r\nimport transferenciaRouter from \"./paths/transferencia-router\";\r\nimport recompensaRouter from \"./paths/recompensa-router\";\r\n\r\nconst apiRouter = express.Router();\r\n\r\napiRouter.use('/login', loginRouter);\r\napiRouter.use(\"/pessoas\" , pessoaRouter);\r\napiRouter.use(\"/recompensas\" ,recompensaRouter);\r\napiRouter.use (\"/transferencias\", transferenciaRouter);\r\napiRouter.use(\"/\", (req ,resp,next) =>{\r\n\r\n    resp.send(\" API V1\")\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default apiRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128377
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\\\\login-router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\login-router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\login-router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\login-router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
        "sourceFileName": "login-router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _jwtSimple = _interopRequireDefault(require(\"jwt-simple\"));\n\nvar _config = _interopRequireDefault(require(\"./../config\"));\n\nvar _pessoa = require(\"../Schemas/pessoa.schema\");\n\nvar _pessoaModel = _interopRequireDefault(require(\"../models/pessoa-model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar loginRouter = _express[\"default\"].Router();\n\nloginRouter.use((0, _cors[\"default\"])());\nvar pessoa = new _mongoose[\"default\"].model('pessoas', _pessoa.pessoaSchemaValidate);\nloginRouter.post(\"/token\", function (req, resp) {\n  var email = req.body.email;\n  pessoa.findOne({\n    \"login.email\": email\n  }, function (erro, user) {\n    if (!user) {\n      return resp.status(404).json({\n        status: false,\n        err: {\n          message: 'usuario não cadastrado !'\n        }\n      });\n    }\n\n    _pessoaModel[\"default\"].verificaSenha(req.body.senha, user.login.senha, function (err, result) {\n      if (!result || err) {\n        return resp.status(404).json({\n          status: false,\n          err: err\n        });\n      }\n\n      var token = _jwtSimple[\"default\"].encode({\n        id: user._id\n      }, _config[\"default\"].secretOrKey);\n\n      return resp.status(200).json({\n        status: true,\n        token: token\n      });\n    });\n  });\n});\nvar _default = loginRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLXJvdXRlci5qcyJdLCJuYW1lcyI6WyJsb2dpblJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJwZXNzb2EiLCJtb25nb29zZSIsIm1vZGVsIiwicGVzc29hU2NoZW1hVmFsaWRhdGUiLCJwb3N0IiwicmVxIiwicmVzcCIsImVtYWlsIiwiYm9keSIsImZpbmRPbmUiLCJlcnJvIiwidXNlciIsInN0YXR1cyIsImpzb24iLCJlcnIiLCJtZXNzYWdlIiwicGVzc29hTW9kZWwiLCJ2ZXJpZmljYVNlbmhhIiwic2VuaGEiLCJsb2dpbiIsInJlc3VsdCIsInRva2VuIiwiand0U2ltcGxlIiwiZW5jb2RlIiwiaWQiLCJfaWQiLCJqd3RDb25maWciLCJzZWNyZXRPcktleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRUEsSUFBTUEsV0FBVyxHQUFHQyxvQkFBUUMsTUFBUixFQUFwQjs7QUFFQUYsV0FBVyxDQUFDRyxHQUFaLENBQWdCLHVCQUFoQjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJQyxxQkFBU0MsS0FBYixDQUFtQixTQUFuQixFQUE2QkMsNEJBQTdCLENBQWI7QUFFQVAsV0FBVyxDQUFDUSxJQUFaLENBQWlCLFFBQWpCLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFhO0FBQUEsTUFDakNDLEtBRGlDLEdBQ3ZCRixHQUFHLENBQUNHLElBRG1CLENBQ2pDRCxLQURpQztBQUd2Q1AsRUFBQUEsTUFBTSxDQUFDUyxPQUFQLENBQWU7QUFBRSxtQkFBZUY7QUFBakIsR0FBZixFQUF3QyxVQUFDRyxJQUFELEVBQVFDLElBQVIsRUFBZTtBQUVsRCxRQUFHLENBQUNBLElBQUosRUFBUztBQUNMLGFBQU9MLElBQUksQ0FBQ00sTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCO0FBQ3pCRCxRQUFBQSxNQUFNLEVBQUUsS0FEaUI7QUFFekJFLFFBQUFBLEdBQUcsRUFBRTtBQUFFQyxVQUFBQSxPQUFPLEVBQUU7QUFBWDtBQUZvQixPQUF0QixDQUFQO0FBSUg7O0FBRUhDLDRCQUFZQyxhQUFaLENBQTBCWixHQUFHLENBQUNHLElBQUosQ0FBU1UsS0FBbkMsRUFBMENQLElBQUksQ0FBQ1EsS0FBTCxDQUFXRCxLQUFyRCxFQUEyRCxVQUFDSixHQUFELEVBQUtNLE1BQUwsRUFBYztBQUNwRSxVQUFHLENBQUNBLE1BQUQsSUFBV04sR0FBZCxFQUFrQjtBQUNkLGVBQU9SLElBQUksQ0FBQ00sTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCO0FBQ3pCRCxVQUFBQSxNQUFNLEVBQUUsS0FEaUI7QUFFekJFLFVBQUFBLEdBQUcsRUFBR0E7QUFGbUIsU0FBdEIsQ0FBUDtBQUlIOztBQUVELFVBQUlPLEtBQUssR0FBSUMsc0JBQVVDLE1BQVYsQ0FBaUI7QUFBQ0MsUUFBQUEsRUFBRSxFQUFFYixJQUFJLENBQUNjO0FBQVYsT0FBakIsRUFBZ0NDLG1CQUFVQyxXQUExQyxDQUFiOztBQUNBLGFBQU9yQixJQUFJLENBQUNNLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUN6QkQsUUFBQUEsTUFBTSxFQUFFLElBRGlCO0FBRXpCUyxRQUFBQSxLQUFLLEVBQUxBO0FBRnlCLE9BQXRCLENBQVA7QUFLSCxLQWRGO0FBZUYsR0F4QkQ7QUEwQkMsQ0E3QkQ7ZUFpQ2V6QixXIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxwYXRocyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIjtcclxuXHJcbmltcG9ydCBqd3RTaW1wbGUgZnJvbSAnand0LXNpbXBsZSc7XHJcbmltcG9ydCBqd3RDb25maWcgZnJvbScuLy4uL2NvbmZpZyc7XHJcblxyXG5pbXBvcnQgeyBwZXNzb2FTY2hlbWFWYWxpZGF0ZSB9IGZyb20gXCIuLi9TY2hlbWFzL3Blc3NvYS5zY2hlbWFcIjtcclxuaW1wb3J0IHBlc3NvYU1vZGVsIGZyb20gXCIuLi9tb2RlbHMvcGVzc29hLW1vZGVsXCI7XHJcblxyXG5jb25zdCBsb2dpblJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5sb2dpblJvdXRlci51c2UoY29ycygpKTtcclxuXHJcbmxldCBwZXNzb2EgPSBuZXcgbW9uZ29vc2UubW9kZWwoJ3Blc3NvYXMnLHBlc3NvYVNjaGVtYVZhbGlkYXRlKTtcclxuXHJcbmxvZ2luUm91dGVyLnBvc3QoXCIvdG9rZW5cIiwocmVxICxyZXNwKT0+e1xyXG5sZXQgeyBlbWFpbCB9ID0gcmVxLmJvZHk7XHJcblxyXG5wZXNzb2EuZmluZE9uZSh7IFwibG9naW4uZW1haWxcIjogZW1haWwgfSwoZXJybyAsIHVzZXIpPT57XHJcblxyXG4gICAgIGlmKCF1c2VyKXtcclxuICAgICAgICAgcmV0dXJuIHJlc3Auc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgZXJyIDp7IG1lc3NhZ2UgOid1c3VhcmlvIG7Do28gY2FkYXN0cmFkbyAhJ31cclxuICAgICAgICAgfSlcclxuICAgICB9XHJcblxyXG4gICBwZXNzb2FNb2RlbC52ZXJpZmljYVNlbmhhKHJlcS5ib2R5LnNlbmhhLCB1c2VyLmxvZ2luLnNlbmhhLChlcnIscmVzdWx0KT0+e1xyXG4gICAgICAgIGlmKCFyZXN1bHQgfHwgZXJyKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3Auc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZXJyIDogZXJyXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdG9rZW4gID0gand0U2ltcGxlLmVuY29kZSh7aWQ6IHVzZXIuX2lkfSxqd3RDb25maWcuc2VjcmV0T3JLZXkpO1xyXG4gICAgICAgIHJldHVybiByZXNwLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICBzdGF0dXM6IHRydWUsXHJcbiAgICAgICAgICAgIHRva2VuXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG59KVxyXG5cclxufSk7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGxvZ2luUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "login-router.js"
      ],
      "names": [
        "loginRouter",
        "express",
        "Router",
        "use",
        "pessoa",
        "mongoose",
        "model",
        "pessoaSchemaValidate",
        "post",
        "req",
        "resp",
        "email",
        "body",
        "findOne",
        "erro",
        "user",
        "status",
        "json",
        "err",
        "message",
        "pessoaModel",
        "verificaSenha",
        "senha",
        "login",
        "result",
        "token",
        "jwtSimple",
        "encode",
        "id",
        "_id",
        "jwtConfig",
        "secretOrKey"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,WAAW,GAAGC,oBAAQC,MAAR,EAApB;;AAEAF,WAAW,CAACG,GAAZ,CAAgB,uBAAhB;AAEA,IAAIC,MAAM,GAAG,IAAIC,qBAASC,KAAb,CAAmB,SAAnB,EAA6BC,4BAA7B,CAAb;AAEAP,WAAW,CAACQ,IAAZ,CAAiB,QAAjB,EAA0B,UAACC,GAAD,EAAMC,IAAN,EAAa;AAAA,MACjCC,KADiC,GACvBF,GAAG,CAACG,IADmB,CACjCD,KADiC;AAGvCP,EAAAA,MAAM,CAACS,OAAP,CAAe;AAAE,mBAAeF;AAAjB,GAAf,EAAwC,UAACG,IAAD,EAAQC,IAAR,EAAe;AAElD,QAAG,CAACA,IAAJ,EAAS;AACL,aAAOL,IAAI,CAACM,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AACzBD,QAAAA,MAAM,EAAE,KADiB;AAEzBE,QAAAA,GAAG,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAFoB,OAAtB,CAAP;AAIH;;AAEHC,4BAAYC,aAAZ,CAA0BZ,GAAG,CAACG,IAAJ,CAASU,KAAnC,EAA0CP,IAAI,CAACQ,KAAL,CAAWD,KAArD,EAA2D,UAACJ,GAAD,EAAKM,MAAL,EAAc;AACpE,UAAG,CAACA,MAAD,IAAWN,GAAd,EAAkB;AACd,eAAOR,IAAI,CAACM,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AACzBD,UAAAA,MAAM,EAAE,KADiB;AAEzBE,UAAAA,GAAG,EAAGA;AAFmB,SAAtB,CAAP;AAIH;;AAED,UAAIO,KAAK,GAAIC,sBAAUC,MAAV,CAAiB;AAACC,QAAAA,EAAE,EAAEb,IAAI,CAACc;AAAV,OAAjB,EAAgCC,mBAAUC,WAA1C,CAAb;;AACA,aAAOrB,IAAI,CAACM,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AACzBD,QAAAA,MAAM,EAAE,IADiB;AAEzBS,QAAAA,KAAK,EAALA;AAFyB,OAAtB,CAAP;AAKH,KAdF;AAeF,GAxBD;AA0BC,CA7BD;eAiCezB,W",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "sourcesContent": [
        "import express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport cors from \"cors\";\r\n\r\nimport jwtSimple from 'jwt-simple';\r\nimport jwtConfig from'./../config';\r\n\r\nimport { pessoaSchemaValidate } from \"../Schemas/pessoa.schema\";\r\nimport pessoaModel from \"../models/pessoa-model\";\r\n\r\nconst loginRouter = express.Router();\r\n\r\nloginRouter.use(cors());\r\n\r\nlet pessoa = new mongoose.model('pessoas',pessoaSchemaValidate);\r\n\r\nloginRouter.post(\"/token\",(req ,resp)=>{\r\nlet { email } = req.body;\r\n\r\npessoa.findOne({ \"login.email\": email },(erro , user)=>{\r\n\r\n     if(!user){\r\n         return resp.status(404).json({\r\n             status: false,\r\n             err :{ message :'usuario não cadastrado !'}\r\n         })\r\n     }\r\n\r\n   pessoaModel.verificaSenha(req.body.senha, user.login.senha,(err,result)=>{\r\n        if(!result || err){\r\n            return resp.status(404).json({\r\n                status: false,\r\n                err : err\r\n            })\r\n        }\r\n\r\n        let token  = jwtSimple.encode({id: user._id},jwtConfig.secretOrKey);\r\n        return resp.status(200).json({\r\n            status: true,\r\n            token\r\n        })\r\n\r\n    })\r\n})\r\n\r\n});\r\n\r\n\r\n\r\nexport default loginRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128382
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Extractjwt = require('passport-jwt').ExtractJwt;\n\nmodule.exports = {\n  secretOrKey: \"%$¨%$¨%$¨¨hyynynynynyn234234*(&*\",\n  jwtFromRequest: Extractjwt.fromAuthHeaderWithScheme('JWT')\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJFeHRyYWN0and0IiwicmVxdWlyZSIsIkV4dHJhY3RKd3QiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VjcmV0T3JLZXkiLCJqd3RGcm9tUmVxdWVzdCIsImZyb21BdXRoSGVhZGVyV2l0aFNjaGVtZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxjQUFELENBQVAsQ0FBd0JDLFVBQTNDOztBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsV0FBVyxFQUFFLGtDQURBO0FBRWJDLEVBQUFBLGNBQWMsRUFBRU4sVUFBVSxDQUFDTyx3QkFBWCxDQUFvQyxLQUFwQztBQUZILENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRXh0cmFjdGp3dCA9IHJlcXVpcmUoJ3Bhc3Nwb3J0LWp3dCcpLkV4dHJhY3RKd3Q7XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgc2VjcmV0T3JLZXk6IFwiJSTCqCUkwqglJMKowqhoeXlueW55bnlueW4yMzQyMzQqKCYqXCIsXHJcbiAgICBqd3RGcm9tUmVxdWVzdDogRXh0cmFjdGp3dC5mcm9tQXV0aEhlYWRlcldpdGhTY2hlbWUoJ0pXVCcpXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "Extractjwt",
        "require",
        "ExtractJwt",
        "module",
        "exports",
        "secretOrKey",
        "jwtFromRequest",
        "fromAuthHeaderWithScheme"
      ],
      "mappings": ";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,UAA3C;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,WAAW,EAAE,kCADA;AAEbC,EAAAA,cAAc,EAAEN,UAAU,CAACO,wBAAX,CAAoC,KAApC;AAFH,CAAjB",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1",
      "sourcesContent": [
        "const Extractjwt = require('passport-jwt').ExtractJwt;\r\nmodule.exports = {\r\n    secretOrKey: \"%$¨%$¨%$¨¨hyynynynynyn234234*(&*\",\r\n    jwtFromRequest: Extractjwt.fromAuthHeaderWithScheme('JWT')\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128378
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\Schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\Schemas\\\\pessoa.schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\pessoa.schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\pessoa.schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\pessoa.schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
        "sourceFileName": "pessoa.schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pessoaSchemaDb = exports.pessoaSchemaValidate = void 0;\nvar pessoaSchemaValidate = {\n  nome: {\n    type: String,\n    description: \"nome da pessoa a ser cadastrada\",\n    required: true\n  },\n  qtdcoinstransf: {\n    type: Number,\n    description: \"quantidade de moedas que a pessoa pode transferir para outras pessoas\"\n  },\n  qtdcoins: {\n    type: Number,\n    description: \"quantidade de moedas recebidas de outras pessaos e que podem ser trocadas por recompensas\"\n  },\n  login: {\n    email: {\n      type: String,\n      required: true\n    },\n    senha: {\n      type: String,\n      required: true\n    }\n  }\n};\nexports.pessoaSchemaValidate = pessoaSchemaValidate;\nvar pessoaSchemaDb = {\n  nome: String,\n  qtdcoinstransf: Number,\n  qtdcoins: Number\n};\nexports.pessoaSchemaDb = pessoaSchemaDb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlc3NvYS5zY2hlbWEuanMiXSwibmFtZXMiOlsicGVzc29hU2NoZW1hVmFsaWRhdGUiLCJub21lIiwidHlwZSIsIlN0cmluZyIsImRlc2NyaXB0aW9uIiwicmVxdWlyZWQiLCJxdGRjb2luc3RyYW5zZiIsIk51bWJlciIsInF0ZGNvaW5zIiwibG9naW4iLCJlbWFpbCIsInNlbmhhIiwicGVzc29hU2NoZW1hRGIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNRLElBQU1BLG9CQUFvQixHQUFHO0FBRWhDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUZDLElBQUFBLFdBQVcsRUFBRSxpQ0FGWDtBQUdGQyxJQUFBQSxRQUFRLEVBQUU7QUFIUixHQUYwQjtBQU9oQ0MsRUFBQUEsY0FBYyxFQUFFO0FBQ1pKLElBQUFBLElBQUksRUFBRUssTUFETTtBQUVaSCxJQUFBQSxXQUFXLEVBQUU7QUFGRCxHQVBnQjtBQVloQ0ksRUFBQUEsUUFBUSxFQUFFO0FBQ05OLElBQUFBLElBQUksRUFBRUssTUFEQTtBQUVOSCxJQUFBQSxXQUFXLEVBQUU7QUFGUCxHQVpzQjtBQWdCaENLLEVBQUFBLEtBQUssRUFBRTtBQUNIQyxJQUFBQSxLQUFLLEVBQUU7QUFDSFIsTUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUhFLE1BQUFBLFFBQVEsRUFBRTtBQUZQLEtBREo7QUFLSE0sSUFBQUEsS0FBSyxFQUFFO0FBQ0hULE1BQUFBLElBQUksRUFBRUMsTUFESDtBQUVIRSxNQUFBQSxRQUFRLEVBQUU7QUFGUDtBQUxKO0FBaEJ5QixDQUE3Qjs7QUE0QkQsSUFBTU8sY0FBYyxHQUFHO0FBQzFCWCxFQUFBQSxJQUFJLEVBQUVFLE1BRG9CO0FBRTFCRyxFQUFBQSxjQUFjLEVBQUVDLE1BRlU7QUFHMUJDLEVBQUFBLFFBQVEsRUFBRUQ7QUFIZ0IsQ0FBdkIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEZWxsXFxSZXBvc1xcYXBpLW1lcml0aS1tb25leVxcc3JjXFxhcGktdjFcXFNjaGVtYXMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuIGV4cG9ydCBjb25zdCBwZXNzb2FTY2hlbWFWYWxpZGF0ZSA9IHtcclxuXHJcbiAgICAgbm9tZToge1xyXG4gICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgIGRlc2NyaXB0aW9uOiBcIm5vbWUgZGEgcGVzc29hIGEgc2VyIGNhZGFzdHJhZGFcIixcclxuICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICB9LFxyXG4gICAgIHF0ZGNvaW5zdHJhbnNmOiB7XHJcbiAgICAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgICAgZGVzY3JpcHRpb246IFwicXVhbnRpZGFkZSBkZSBtb2VkYXMgcXVlIGEgcGVzc29hIHBvZGUgdHJhbnNmZXJpciBwYXJhIG91dHJhcyBwZXNzb2FzXCIsXHJcblxyXG4gICAgIH0sXHJcbiAgICAgcXRkY29pbnM6IHtcclxuICAgICAgICAgdHlwZTogTnVtYmVyLFxyXG4gICAgICAgICBkZXNjcmlwdGlvbjogXCJxdWFudGlkYWRlIGRlIG1vZWRhcyByZWNlYmlkYXMgZGUgb3V0cmFzIHBlc3Nhb3MgZSBxdWUgcG9kZW0gc2VyIHRyb2NhZGFzIHBvciByZWNvbXBlbnNhc1wiXHJcbiAgICAgfSxcclxuICAgICBsb2dpbjoge1xyXG4gICAgICAgICBlbWFpbDoge1xyXG4gICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgfSxcclxuICAgICAgICAgc2VuaGE6IHtcclxuICAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgcGVzc29hU2NoZW1hRGIgPSB7XHJcbiAgICBub21lOiBTdHJpbmcsXHJcbiAgICBxdGRjb2luc3RyYW5zZjogTnVtYmVyLFxyXG4gICAgcXRkY29pbnM6IE51bWJlclxyXG59XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pessoa.schema.js"
      ],
      "names": [
        "pessoaSchemaValidate",
        "nome",
        "type",
        "String",
        "description",
        "required",
        "qtdcoinstransf",
        "Number",
        "qtdcoins",
        "login",
        "email",
        "senha",
        "pessoaSchemaDb"
      ],
      "mappings": ";;;;;;AACQ,IAAMA,oBAAoB,GAAG;AAEhCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,WAAW,EAAE,iCAFX;AAGFC,IAAAA,QAAQ,EAAE;AAHR,GAF0B;AAOhCC,EAAAA,cAAc,EAAE;AACZJ,IAAAA,IAAI,EAAEK,MADM;AAEZH,IAAAA,WAAW,EAAE;AAFD,GAPgB;AAYhCI,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEK,MADA;AAENH,IAAAA,WAAW,EAAE;AAFP,GAZsB;AAgBhCK,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AACHR,MAAAA,IAAI,EAAEC,MADH;AAEHE,MAAAA,QAAQ,EAAE;AAFP,KADJ;AAKHM,IAAAA,KAAK,EAAE;AACHT,MAAAA,IAAI,EAAEC,MADH;AAEHE,MAAAA,QAAQ,EAAE;AAFP;AALJ;AAhByB,CAA7B;;AA4BD,IAAMO,cAAc,GAAG;AAC1BX,EAAAA,IAAI,EAAEE,MADoB;AAE1BG,EAAAA,cAAc,EAAEC,MAFU;AAG1BC,EAAAA,QAAQ,EAAED;AAHgB,CAAvB",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
      "sourcesContent": [
        "\r\n export const pessoaSchemaValidate = {\r\n\r\n     nome: {\r\n         type: String,\r\n         description: \"nome da pessoa a ser cadastrada\",\r\n         required: true\r\n     },\r\n     qtdcoinstransf: {\r\n         type: Number,\r\n         description: \"quantidade de moedas que a pessoa pode transferir para outras pessoas\",\r\n\r\n     },\r\n     qtdcoins: {\r\n         type: Number,\r\n         description: \"quantidade de moedas recebidas de outras pessaos e que podem ser trocadas por recompensas\"\r\n     },\r\n     login: {\r\n         email: {\r\n             type: String,\r\n             required: true\r\n         },\r\n         senha: {\r\n             type: String,\r\n             required: true\r\n         }\r\n     }\r\n};\r\n\r\nexport const pessoaSchemaDb = {\r\n    nome: String,\r\n    qtdcoinstransf: Number,\r\n    qtdcoins: Number\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128375
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\models\\\\pessoa-model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\pessoa-model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\pessoa-model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\pessoa-model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
        "sourceFileName": "pessoa-model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _pessoa = require(\"../Schemas/pessoa.schema\");\n\nvar _configDb = require(\"../../../config/config-db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//mongoose.connect(\"mongodb://localhost:27017/meriti-money\", {useNewUrlParser: true});\n_mongoose[\"default\"].connect(_configDb.configdb.stringConnection, {\n  useNewUrlParser: true\n});\n\nvar schema = new _mongoose[\"default\"].Schema(_pessoa.pessoaSchemaValidate);\n\nvar pessoaModel = _mongoose[\"default\"].model('Pessoa', schema);\n\nfunction inserir(parans, callback) {\n  var pessoa = new pessoaModel(parans);\n  pessoa.save(function (err) {\n    if (err) return handleError(err);\n    var message = \"Pessoa inserida com sucesso\";\n    callback(message);\n  });\n}\n\nfunction atualizar(params) {}\n\nfunction deletar() {\n  pessoaModel.deleteOne({\n    nome: \"novo contato\"\n  }, function (err) {\n    if (err) return handleError(err);\n    console.log(\"pessoa deletada com sucesso!\");\n  });\n}\n\nfunction listar(parans, callback) {\n  pessoaModel.find(parans, function (err, pessoas) {\n    if (!pessoas || err) {\n      err = \"não foi possivelretornar\";\n      pessoas = null;\n    }\n\n    callback(err, pessoas);\n  });\n}\n\nfunction listaSemUsuarioLogado(email, callback) {\n  pessoaModel.find({\n    \"login.email\": {\n      $ne: email\n    }\n  }, function (err, pessoas) {\n    if (!pessoas || err) {\n      err = \"não foi possivelretornar\";\n      pessoas = null;\n    }\n\n    callback(err, pessoas);\n  });\n}\n\nfunction debitacoins(_x, _x2) {\n  return _debitacoins.apply(this, arguments);\n}\n\nfunction _debitacoins() {\n  _debitacoins = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(idDoador, valorTransferido) {\n    var restante, pessoa, saldo;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return pessoaModel.findById(idDoador);\n\n          case 2:\n            pessoa = _context.sent;\n            saldo = pessoa.qtdcoinstransf;\n\n            if (!(saldo >= valorTransferido)) {\n              _context.next = 8;\n              break;\n            }\n\n            restante = saldo - valorTransferido;\n            pessoaModel.updateOne({\n              _id: idDoador\n            }, {\n              qtdcoinstransf: restante\n            }, function (err, result) {});\n            return _context.abrupt(\"return\", true);\n\n          case 8:\n            return _context.abrupt(\"return\", false);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _debitacoins.apply(this, arguments);\n}\n\nfunction creditacoins(idRecebedor, valorTranferido) {\n  var valorCreditado;\n  pessoaModel.findById(idRecebedor, function (err, pessoa) {\n    var valorAtual = pessoa.qtdcoins;\n    valorCreditado = valorAtual + valorTranferido;\n    pessoaModel.updateOne({\n      _id: idRecebedor\n    }, {\n      qtdcoins: valorCreditado\n    }, function (err, result) {});\n  });\n}\n\nfunction pegaporid(id) {\n  var promisse = new Promise(function (resolve, reject) {\n    var pessoa = pessoaModel.findById(id, function (err, pessoa) {}).select({\n      _id: 1,\n      nome: 1,\n      \"login.email\": 1\n    });\n\n    if (!pessoa) {\n      resolve(null);\n      reject(\"Usuario não encontrado\");\n    } else {\n      resolve(pessoa);\n      reject(null);\n    }\n  });\n  return promisse;\n}\n\nfunction verificaSenha(passwordBody, senhaBanco, callback) {\n  var result = passwordBody === senhaBanco ? true : false;\n  var err = null;\n\n  if (!result) {\n    err = {\n      message: \"senha incorreta\"\n    };\n  }\n\n  return callback(err, result);\n}\n\nvar _default = {\n  inserir: inserir,\n  atualizar: atualizar,\n  deletar: deletar,\n  listar: listar,\n  pegaporid: pegaporid,\n  verificaSenha: verificaSenha,\n  listaSemUsuarioLogado: listaSemUsuarioLogado,\n  debitacoins: debitacoins,\n  creditacoins: creditacoins\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "pessoa-model.js"
      ],
      "names": [
        "mongoose",
        "connect",
        "configdb",
        "stringConnection",
        "useNewUrlParser",
        "schema",
        "Schema",
        "pessoaSchemaValidate",
        "pessoaModel",
        "model",
        "inserir",
        "parans",
        "callback",
        "pessoa",
        "save",
        "err",
        "handleError",
        "message",
        "atualizar",
        "params",
        "deletar",
        "deleteOne",
        "nome",
        "console",
        "log",
        "listar",
        "find",
        "pessoas",
        "listaSemUsuarioLogado",
        "email",
        "$ne",
        "debitacoins",
        "idDoador",
        "valorTransferido",
        "findById",
        "saldo",
        "qtdcoinstransf",
        "restante",
        "updateOne",
        "_id",
        "result",
        "creditacoins",
        "idRecebedor",
        "valorTranferido",
        "valorCreditado",
        "valorAtual",
        "qtdcoins",
        "pegaporid",
        "id",
        "promisse",
        "Promise",
        "resolve",
        "reject",
        "select",
        "verificaSenha",
        "passwordBody",
        "senhaBanco"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA;AACAA,qBAASC,OAAT,CAAiBC,mBAASC,gBAA1B,EAA4C;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAA5C;;AAEA,IAAIC,MAAM,GAAG,IAAIL,qBAASM,MAAb,CAAoBC,4BAApB,CAAb;;AAEA,IAAIC,WAAW,GAAGR,qBAASS,KAAT,CAAe,QAAf,EAAyBJ,MAAzB,CAAlB;;AAGA,SAASK,OAAT,CAAiBC,MAAjB,EAAyBC,QAAzB,EAAmC;AAC/B,MAAIC,MAAM,GAAG,IAAIL,WAAJ,CAAgBG,MAAhB,CAAb;AACAE,EAAAA,MAAM,CAACC,IAAP,CAAY,UAACC,GAAD,EAAS;AACjB,QAAIA,GAAJ,EAAS,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACT,QAAIE,OAAO,GAAG,6BAAd;AACAL,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACH,GAJD;AAKH;;AAED,SAASC,SAAT,CAAmBC,MAAnB,EAA2B,CAE1B;;AAED,SAASC,OAAT,GAAmB;AACfZ,EAAAA,WAAW,CAACa,SAAZ,CAAsB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAtB,EAA8C,UAACP,GAAD,EAAS;AACnD,QAAIA,GAAJ,EAAS,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,GAHD;AAIH;;AAED,SAASC,MAAT,CAAgBd,MAAhB,EAAwBC,QAAxB,EAAkC;AAC9BJ,EAAAA,WAAW,CAACkB,IAAZ,CAAiBf,MAAjB,EAAyB,UAACI,GAAD,EAAMY,OAAN,EAAkB;AACvC,QAAI,CAACA,OAAD,IAAYZ,GAAhB,EAAqB;AACjBA,MAAAA,GAAG,GAAG,0BAAN;AACAY,MAAAA,OAAO,GAAG,IAAV;AACH;;AACDf,IAAAA,QAAQ,CAACG,GAAD,EAAMY,OAAN,CAAR;AACH,GAND;AAOH;;AAGD,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCjB,QAAtC,EAAgD;AAC5CJ,EAAAA,WAAW,CAACkB,IAAZ,CAAiB;AAAC,mBAAe;AAACI,MAAAA,GAAG,EAAED;AAAN;AAAhB,GAAjB,EAAgD,UAACd,GAAD,EAAMY,OAAN,EAAkB;AAC9D,QAAI,CAACA,OAAD,IAAYZ,GAAhB,EAAqB;AACjBA,MAAAA,GAAG,GAAG,0BAAN;AACAY,MAAAA,OAAO,GAAG,IAAV;AACH;;AACDf,IAAAA,QAAQ,CAACG,GAAD,EAAMY,OAAN,CAAR;AACH,GAND;AAOH;;SAEcI,W;;;;;;;0BAAf,iBAA2BC,QAA3B,EAAqCC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEuBzB,WAAW,CAAC0B,QAAZ,CAAqBF,QAArB,CAFvB;;AAAA;AAEQnB,YAAAA,MAFR;AAGgBsB,YAAAA,KAHhB,GAGwBtB,MAAM,CAACuB,cAH/B;;AAAA,kBAIgBD,KAAK,IAAIF,gBAJzB;AAAA;AAAA;AAAA;;AAKgBI,YAAAA,QAAQ,GAAGF,KAAK,GAAGF,gBAAnB;AACAzB,YAAAA,WAAW,CAAC8B,SAAZ,CAAsB;AAACC,cAAAA,GAAG,EAAEP;AAAN,aAAtB,EAAuC;AAACI,cAAAA,cAAc,EAAEC;AAAjB,aAAvC,EAAmE,UAACtB,GAAD,EAAMyB,MAAN,EAAiB,CACnF,CADD;AANhB,6CAQuB,IARvB;;AAAA;AAAA,6CAUe,KAVf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaA,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,eAAnC,EAAoD;AAChD,MAAIC,cAAJ;AACApC,EAAAA,WAAW,CAAC0B,QAAZ,CAAqBQ,WAArB,EAAkC,UAAC3B,GAAD,EAAMF,MAAN,EAAiB;AAC/C,QAAIgC,UAAU,GAAGhC,MAAM,CAACiC,QAAxB;AACAF,IAAAA,cAAc,GAAGC,UAAU,GAAGF,eAA9B;AACAnC,IAAAA,WAAW,CAAC8B,SAAZ,CAAsB;AAACC,MAAAA,GAAG,EAAEG;AAAN,KAAtB,EAA0C;AAACI,MAAAA,QAAQ,EAAEF;AAAX,KAA1C,EAAsE,UAAC7B,GAAD,EAAMyB,MAAN,EAAiB,CAEtF,CAFD;AAGH,GAND;AAOH;;AAED,SAASO,SAAT,CAAmBC,EAAnB,EAAuB;AACnB,MAAIC,QAAQ,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5C,QAAIvC,MAAM,GAAGL,WAAW,CAAC0B,QAAZ,CAAqBc,EAArB,EAAyB,UAACjC,GAAD,EAAMF,MAAN,EAAiB,CACtD,CADY,EACVwC,MADU,CACH;AAACd,MAAAA,GAAG,EAAE,CAAN;AAAUjB,MAAAA,IAAI,EAAE,CAAhB;AAAoB,qBAAc;AAAlC,KADG,CAAb;;AAEA,QAAI,CAACT,MAAL,EAAa;AACTsC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,MAAM,CAAC,wBAAD,CAAN;AACH,KAHD,MAIK;AACDD,MAAAA,OAAO,CAACtC,MAAD,CAAP;AACAuC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACH;AACJ,GAXc,CAAf;AAYA,SAAOH,QAAP;AACH;;AAGD,SAASK,aAAT,CAAuBC,YAAvB,EAAqCC,UAArC,EAAiD5C,QAAjD,EAA2D;AACvD,MAAI4B,MAAM,GAAGe,YAAY,KAAKC,UAAjB,GAA8B,IAA9B,GAAqC,KAAlD;AACA,MAAIzC,GAAG,GAAG,IAAV;;AACA,MAAI,CAACyB,MAAL,EAAa;AACTzB,IAAAA,GAAG,GAAG;AAACE,MAAAA,OAAO,EAAE;AAAV,KAAN;AACH;;AACD,SAAOL,QAAQ,CAACG,GAAD,EAAMyB,MAAN,CAAf;AACH;;eAGc;AACX9B,EAAAA,OAAO,EAAPA,OADW;AAEXQ,EAAAA,SAAS,EAATA,SAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXK,EAAAA,MAAM,EAANA,MAJW;AAKXsB,EAAAA,SAAS,EAATA,SALW;AAMXO,EAAAA,aAAa,EAAbA,aANW;AAOX1B,EAAAA,qBAAqB,EAArBA,qBAPW;AAQXG,EAAAA,WAAW,EAAXA,WARW;AASXU,EAAAA,YAAY,EAAZA;AATW,C",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nimport {pessoaSchemaDb, pessoaSchemaValidate} from \"../Schemas/pessoa.schema\";\r\nimport {configdb} from \"../../../config/config-db\";\r\n\r\n//mongoose.connect(\"mongodb://localhost:27017/meriti-money\", {useNewUrlParser: true});\r\nmongoose.connect(configdb.stringConnection, {useNewUrlParser: true});\r\n\r\nlet schema = new mongoose.Schema(pessoaSchemaValidate);\r\n\r\nlet pessoaModel = mongoose.model('Pessoa', schema);\r\n\r\n\r\nfunction inserir(parans, callback) {\r\n    let pessoa = new pessoaModel(parans);\r\n    pessoa.save((err) => {\r\n        if (err) return handleError(err);\r\n        let message = \"Pessoa inserida com sucesso\";\r\n        callback(message);\r\n    });\r\n}\r\n\r\nfunction atualizar(params) {\r\n\r\n}\r\n\r\nfunction deletar() {\r\n    pessoaModel.deleteOne({nome: \"novo contato\"}, (err) => {\r\n        if (err) return handleError(err);\r\n        console.log(\"pessoa deletada com sucesso!\");\r\n    });\r\n}\r\n\r\nfunction listar(parans, callback) {\r\n    pessoaModel.find(parans, (err, pessoas) => {\r\n        if (!pessoas || err) {\r\n            err = \"não foi possivelretornar\";\r\n            pessoas = null;\r\n        }\r\n        callback(err, pessoas);\r\n    });\r\n}\r\n\r\n\r\nfunction listaSemUsuarioLogado(email, callback) {\r\n    pessoaModel.find({\"login.email\": {$ne: email}}, (err, pessoas) => {\r\n        if (!pessoas || err) {\r\n            err = \"não foi possivelretornar\";\r\n            pessoas = null;\r\n        }\r\n        callback(err, pessoas);\r\n    });\r\n}\r\n\r\nasync function debitacoins(idDoador, valorTransferido) {\r\n    let restante;\r\n    let pessoa = await pessoaModel.findById(idDoador);\r\n            let saldo = pessoa.qtdcoinstransf;\r\n            if (saldo >= valorTransferido) {\r\n                restante = saldo - valorTransferido;\r\n                pessoaModel.updateOne({_id: idDoador}, {qtdcoinstransf: restante}, (err, result) => {\r\n                });\r\n                return true;\r\n            }\r\n        return false;\r\n}\r\n\r\nfunction creditacoins(idRecebedor, valorTranferido) {\r\n    let valorCreditado;\r\n    pessoaModel.findById(idRecebedor, (err, pessoa) => {\r\n        let valorAtual = pessoa.qtdcoins;\r\n        valorCreditado = valorAtual + valorTranferido;\r\n        pessoaModel.updateOne({_id: idRecebedor}, {qtdcoins: valorCreditado}, (err, result) => {\r\n\r\n        });\r\n    });\r\n}\r\n\r\nfunction pegaporid(id) {\r\n    let promisse = new Promise((resolve, reject) => {\r\n        let pessoa = pessoaModel.findById(id, (err, pessoa) => {\r\n        }).select({_id: 1 , nome: 1 , \"login.email\":1});\r\n        if (!pessoa) {\r\n            resolve(null);\r\n            reject(\"Usuario não encontrado\");\r\n        }\r\n        else {\r\n            resolve(pessoa);\r\n            reject(null);\r\n        }\r\n    });\r\n    return promisse;\r\n}\r\n\r\n\r\nfunction verificaSenha(passwordBody, senhaBanco, callback) {\r\n    let result = passwordBody === senhaBanco ? true : false;\r\n    let err = null;\r\n    if (!result) {\r\n        err = {message: \"senha incorreta\"};\r\n    }\r\n    return callback(err, result);\r\n}\r\n\r\n\r\nexport default {\r\n    inserir,\r\n    atualizar,\r\n    deletar,\r\n    listar,\r\n    pegaporid,\r\n    verificaSenha,\r\n    listaSemUsuarioLogado,\r\n    debitacoins,\r\n    creditacoins,\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128379
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\config\\\\config-db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\config\\config-db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\config\\config-db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\config\\config-db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\config",
        "sourceFileName": "config-db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar configdb = {\n  \"stringConnection\": \"mongodb://localhost:27017/meriti-money\"\n}; // \"stringConnection\": \"mongodb://bd-meriti-money:pXW4FpLoOmVD7O0iYZ0byCa675hYlMcrt4u98Jnx4LZoUgEmgdA237GAczHkAh8mbIJnhj83gGmfOXCJX8UD2g==@bd-meriti-money.documents.azure.com:10255/meriti-money?ssl=true&replicaSet=globaldb\"\n\nexports.configdb = configdb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy1kYi5qcyJdLCJuYW1lcyI6WyJjb25maWdkYiIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVDLElBQUlBLFFBQVEsR0FBRztBQUVYLHNCQUFvQjtBQUZULENBQWYsQyxDQUlFOztBQUVGQyxPQUFPLENBQUNELFFBQVIsR0FBbUJBLFFBQW5CIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXGNvbmZpZyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuIHZhciBjb25maWdkYiA9IHtcclxuXHJcbiAgICAgXCJzdHJpbmdDb25uZWN0aW9uXCI6IFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9tZXJpdGktbW9uZXlcIlxyXG4gfTtcclxuICAgLy8gXCJzdHJpbmdDb25uZWN0aW9uXCI6IFwibW9uZ29kYjovL2JkLW1lcml0aS1tb25leTpwWFc0RnBMb09tVkQ3TzBpWVowYnlDYTY3NWhZbE1jcnQ0dTk4Sm54NExab1VnRW1nZEEyMzdHQWN6SGtBaDhtYklKbmhqODNnR21mT1hDSlg4VUQyZz09QGJkLW1lcml0aS1tb25leS5kb2N1bWVudHMuYXp1cmUuY29tOjEwMjU1L21lcml0aS1tb25leT9zc2w9dHJ1ZSZyZXBsaWNhU2V0PWdsb2JhbGRiXCJcclxuXHJcbiBleHBvcnRzLmNvbmZpZ2RiID0gY29uZmlnZGI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "config-db.js"
      ],
      "names": [
        "configdb",
        "exports"
      ],
      "mappings": "AAAA;;AAEC,IAAIA,QAAQ,GAAG;AAEX,sBAAoB;AAFT,CAAf,C,CAIE;;AAEFC,OAAO,CAACD,QAAR,GAAmBA,QAAnB",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\config",
      "sourcesContent": [
        "\"use strict\";\r\n\r\n var configdb = {\r\n\r\n     \"stringConnection\": \"mongodb://localhost:27017/meriti-money\"\r\n };\r\n   // \"stringConnection\": \"mongodb://bd-meriti-money:pXW4FpLoOmVD7O0iYZ0byCa675hYlMcrt4u98Jnx4LZoUgEmgdA237GAczHkAh8mbIJnhj83gGmfOXCJX8UD2g==@bd-meriti-money.documents.azure.com:10255/meriti-money?ssl=true&replicaSet=globaldb\"\r\n\r\n exports.configdb = configdb;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128371
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\\\\pessoa-router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\pessoa-router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\pessoa-router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\pessoa-router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
        "sourceFileName": "pessoa-router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsonschema = require(\"jsonschema\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _pessoaModel = _interopRequireDefault(require(\"../models/pessoa-model\"));\n\nvar _pessoa = require(\"../Schemas/pessoa.schema\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar pessoaRouter = _express[\"default\"].Router();\n\npessoaRouter.use((0, _cors[\"default\"])());\npessoaRouter.post(\"/\", function (req, resp) {\n  var verificaobj = (0, _jsonschema.validate)(req.body, _pessoa.pessoaSchemaValidate);\n\n  _pessoaModel[\"default\"].listar({\n    \"login.email\": req.body.login.email\n  }, function (erro, pessoa) {\n    if (!pessoa[0]) {\n      if (verificaobj.errors.length > 0) {\n        resp.status(400).json({\n          'message': \"Bad request \" + verificaobj.errors[0].message\n        });\n      } else {\n        _pessoaModel[\"default\"].inserir(req.body, function (message) {\n          resp.status(201).json({\n            'message': message\n          });\n        });\n      }\n    } else {\n      resp.status(500).json({\n        'message': \"E-mail já cadastrado\"\n      });\n    }\n  });\n});\npessoaRouter.get(\"/me\", _auth[\"default\"].authenticate(), function (req, resp) {\n  resp.status(200).json({\n    status: true,\n    user: req.user\n  });\n});\npessoaRouter.get(\"/:id\", _auth[\"default\"].authenticate(), function (req, resp, next) {\n  if (req.params) {\n    _pessoaModel[\"default\"].pegaporid(req.params.id).then(function (pessoa) {\n      resp.json(pessoa);\n    })[\"catch\"](function (error) {\n      resp.status(404).json({\n        status: false,\n        err: error\n      });\n    });\n  }\n});\npessoaRouter.get(\"/listausuarios/:email\", _auth[\"default\"].authenticate(), function (req, resp, next) {\n  if (req.params) {\n    _pessoaModel[\"default\"].listaSemUsuarioLogado(req.params.email, function (error, pessoa) {\n      if (!pessoa) {\n        resp.status(404).json({\n          status: false,\n          err: error\n        });\n      }\n\n      resp.status(200).json(pessoa);\n    });\n  }\n});\npessoaRouter.get(\"/\", _auth[\"default\"].authenticate(), function (req, resp, next) {\n  _pessoaModel[\"default\"].listar({}, function (erro, data) {\n    if (erro) resp.status(500).send(erro.message);else if (data.length > 0) resp.json(data);else resp.status(404).json({\n      'message': 'nenhum registro encontrado'\n    });\n  });\n});\nvar _default = pessoaRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlc3NvYS1yb3V0ZXIuanMiXSwibmFtZXMiOlsicGVzc29hUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsInBvc3QiLCJyZXEiLCJyZXNwIiwidmVyaWZpY2FvYmoiLCJib2R5IiwicGVzc29hU2NoZW1hVmFsaWRhdGUiLCJwZXNzb2FNb2RlbCIsImxpc3RhciIsImxvZ2luIiwiZW1haWwiLCJlcnJvIiwicGVzc29hIiwiZXJyb3JzIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJpbnNlcmlyIiwiZ2V0IiwiYXV0aCIsImF1dGhlbnRpY2F0ZSIsInVzZXIiLCJuZXh0IiwicGFyYW1zIiwicGVnYXBvcmlkIiwiaWQiLCJ0aGVuIiwiZXJyb3IiLCJlcnIiLCJsaXN0YVNlbVVzdWFyaW9Mb2dhZG8iLCJkYXRhIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxvQkFBUUMsTUFBUixFQUFyQjs7QUFFQUYsWUFBWSxDQUFDRyxHQUFiLENBQWlCLHVCQUFqQjtBQUVBSCxZQUFZLENBQUNJLElBQWIsQ0FBa0IsR0FBbEIsRUFBc0IsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWE7QUFDL0IsTUFBSUMsV0FBVyxHQUFHLDBCQUFTRixHQUFHLENBQUNHLElBQWIsRUFBa0JDLDRCQUFsQixDQUFsQjs7QUFDQUMsMEJBQVlDLE1BQVosQ0FBbUI7QUFBQyxtQkFBY04sR0FBRyxDQUFDRyxJQUFKLENBQVNJLEtBQVQsQ0FBZUM7QUFBOUIsR0FBbkIsRUFBd0QsVUFBQ0MsSUFBRCxFQUFNQyxNQUFOLEVBQWU7QUFDdkUsUUFBRyxDQUFDQSxNQUFNLENBQUMsQ0FBRCxDQUFWLEVBQWU7QUFDWCxVQUFJUixXQUFXLENBQUNTLE1BQVosQ0FBbUJDLE1BQW5CLEdBQTRCLENBQWhDLEVBQW1DO0FBQy9CWCxRQUFBQSxJQUFJLENBQUNZLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUFDLHFCQUFXLGlCQUFpQlosV0FBVyxDQUFDUyxNQUFaLENBQW1CLENBQW5CLEVBQXNCSTtBQUFuRCxTQUF0QjtBQUNILE9BRkQsTUFHSztBQUNEVixnQ0FBWVcsT0FBWixDQUFvQmhCLEdBQUcsQ0FBQ0csSUFBeEIsRUFBOEIsVUFBQ1ksT0FBRCxFQUFhO0FBQ3ZDZCxVQUFBQSxJQUFJLENBQUNZLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUFDLHVCQUFXQztBQUFaLFdBQXRCO0FBQ0gsU0FGRDtBQUdIO0FBQ0osS0FURCxNQVNLO0FBQ0RkLE1BQUFBLElBQUksQ0FBQ1ksTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCO0FBQUMsbUJBQVc7QUFBWixPQUF0QjtBQUNIO0FBRUEsR0FkRDtBQWVILENBakJEO0FBbUJBbkIsWUFBWSxDQUFDc0IsR0FBYixDQUFpQixLQUFqQixFQUF1QkMsaUJBQUtDLFlBQUwsRUFBdkIsRUFBMkMsVUFBQ25CLEdBQUQsRUFBS0MsSUFBTCxFQUFZO0FBQ25EQSxFQUFBQSxJQUFJLENBQUNZLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUNsQkQsSUFBQUEsTUFBTSxFQUFFLElBRFU7QUFFbEJPLElBQUFBLElBQUksRUFBRXBCLEdBQUcsQ0FBQ29CO0FBRlEsR0FBdEI7QUFJSCxDQUxEO0FBT0F6QixZQUFZLENBQUNzQixHQUFiLENBQWlCLE1BQWpCLEVBQXdCQyxpQkFBS0MsWUFBTCxFQUF4QixFQUE0QyxVQUFDbkIsR0FBRCxFQUFLQyxJQUFMLEVBQVVvQixJQUFWLEVBQWlCO0FBQ3pELE1BQUdyQixHQUFHLENBQUNzQixNQUFQLEVBQWM7QUFDWGpCLDRCQUFZa0IsU0FBWixDQUFzQnZCLEdBQUcsQ0FBQ3NCLE1BQUosQ0FBV0UsRUFBakMsRUFBcUNDLElBQXJDLENBQTBDLFVBQUFmLE1BQU0sRUFBRTtBQUM5Q1QsTUFBQUEsSUFBSSxDQUFDYSxJQUFMLENBQVVKLE1BQVY7QUFDSCxLQUZELFdBRVMsVUFBQWdCLEtBQUssRUFBRztBQUNiekIsTUFBQUEsSUFBSSxDQUFDWSxNQUFMLENBQVksR0FBWixFQUFpQkMsSUFBakIsQ0FBc0I7QUFDbEJELFFBQUFBLE1BQU0sRUFBRSxLQURVO0FBRWxCYyxRQUFBQSxHQUFHLEVBQUdEO0FBRlksT0FBdEI7QUFJSCxLQVBEO0FBUUY7QUFDSixDQVhEO0FBYUEvQixZQUFZLENBQUNzQixHQUFiLENBQWlCLHVCQUFqQixFQUF5Q0MsaUJBQUtDLFlBQUwsRUFBekMsRUFBNkQsVUFBQ25CLEdBQUQsRUFBS0MsSUFBTCxFQUFVb0IsSUFBVixFQUFpQjtBQUMxRSxNQUFHckIsR0FBRyxDQUFDc0IsTUFBUCxFQUFjO0FBQ1ZqQiw0QkFBWXVCLHFCQUFaLENBQWtDNUIsR0FBRyxDQUFDc0IsTUFBSixDQUFXZCxLQUE3QyxFQUFtRCxVQUFDa0IsS0FBRCxFQUFPaEIsTUFBUCxFQUFnQjtBQUMvRCxVQUFHLENBQUNBLE1BQUosRUFBWTtBQUNSVCxRQUFBQSxJQUFJLENBQUNZLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUNsQkQsVUFBQUEsTUFBTSxFQUFFLEtBRFU7QUFFbEJjLFVBQUFBLEdBQUcsRUFBRUQ7QUFGYSxTQUF0QjtBQUlIOztBQUNEekIsTUFBQUEsSUFBSSxDQUFDWSxNQUFMLENBQVksR0FBWixFQUFpQkMsSUFBakIsQ0FBc0JKLE1BQXRCO0FBQ0gsS0FSRDtBQVNIO0FBQ0osQ0FaRDtBQWNBZixZQUFZLENBQUNzQixHQUFiLENBQWlCLEdBQWpCLEVBQXFCQyxpQkFBS0MsWUFBTCxFQUFyQixFQUF5QyxVQUFDbkIsR0FBRCxFQUFLQyxJQUFMLEVBQVVvQixJQUFWLEVBQWlCO0FBQ3REaEIsMEJBQVlDLE1BQVosQ0FBbUIsRUFBbkIsRUFBdUIsVUFBQ0csSUFBRCxFQUFPb0IsSUFBUCxFQUFnQjtBQUNuQyxRQUFJcEIsSUFBSixFQUNJUixJQUFJLENBQUNZLE1BQUwsQ0FBWSxHQUFaLEVBQWlCaUIsSUFBakIsQ0FBc0JyQixJQUFJLENBQUNNLE9BQTNCLEVBREosS0FFSyxJQUFJYyxJQUFJLENBQUNqQixNQUFMLEdBQWMsQ0FBbEIsRUFDRFgsSUFBSSxDQUFDYSxJQUFMLENBQVVlLElBQVYsRUFEQyxLQUdENUIsSUFBSSxDQUFDWSxNQUFMLENBQVksR0FBWixFQUFpQkMsSUFBakIsQ0FBc0I7QUFBQyxpQkFBVztBQUFaLEtBQXRCO0FBQ1AsR0FQRDtBQVFILENBVEQ7ZUFZZW5CLFkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEZWxsXFxSZXBvc1xcYXBpLW1lcml0aS1tb25leVxcc3JjXFxhcGktdjFcXHBhdGhzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IHsgdmFsaWRhdGUgfSBmcm9tIFwianNvbnNjaGVtYVwiO1xyXG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xyXG5pbXBvcnQgYXV0aCBmcm9tIFwiLi9hdXRoLmpzXCI7XHJcblxyXG5pbXBvcnQgcGVzc29hTW9kZWwgZnJvbSBcIi4uL21vZGVscy9wZXNzb2EtbW9kZWxcIjtcclxuaW1wb3J0IHtwZXNzb2FTY2hlbWFWYWxpZGF0ZX0gZnJvbSBcIi4uL1NjaGVtYXMvcGVzc29hLnNjaGVtYVwiO1xyXG5cclxuY29uc3QgcGVzc29hUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbnBlc3NvYVJvdXRlci51c2UoY29ycygpKTtcclxuXHJcbnBlc3NvYVJvdXRlci5wb3N0KFwiL1wiLChyZXEsIHJlc3ApPT57XHJcbiAgICBsZXQgdmVyaWZpY2FvYmogPSB2YWxpZGF0ZShyZXEuYm9keSxwZXNzb2FTY2hlbWFWYWxpZGF0ZSk7XHJcbiAgICBwZXNzb2FNb2RlbC5saXN0YXIoe1wibG9naW4uZW1haWxcIjpyZXEuYm9keS5sb2dpbi5lbWFpbH0sKGVycm8scGVzc29hKT0+e1xyXG4gICAgaWYoIXBlc3NvYVswXSkge1xyXG4gICAgICAgIGlmICh2ZXJpZmljYW9iai5lcnJvcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICByZXNwLnN0YXR1cyg0MDApLmpzb24oeydtZXNzYWdlJzogXCJCYWQgcmVxdWVzdCBcIiArIHZlcmlmaWNhb2JqLmVycm9yc1swXS5tZXNzYWdlfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBwZXNzb2FNb2RlbC5pbnNlcmlyKHJlcS5ib2R5LCAobWVzc2FnZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVzcC5zdGF0dXMoMjAxKS5qc29uKHsnbWVzc2FnZSc6IG1lc3NhZ2V9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgcmVzcC5zdGF0dXMoNTAwKS5qc29uKHsnbWVzc2FnZSc6IFwiRS1tYWlsIGrDoSBjYWRhc3RyYWRvXCJ9KTtcclxuICAgIH1cclxuXHJcbiAgICB9KVxyXG59KTtcclxuXHJcbnBlc3NvYVJvdXRlci5nZXQoXCIvbWVcIixhdXRoLmF1dGhlbnRpY2F0ZSgpLChyZXEscmVzcCk9PntcclxuICAgIHJlc3Auc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgc3RhdHVzOiB0cnVlLFxyXG4gICAgICAgIHVzZXI6IHJlcS51c2VyXHJcbiAgICB9KVxyXG59KTtcclxuXHJcbnBlc3NvYVJvdXRlci5nZXQoXCIvOmlkXCIsYXV0aC5hdXRoZW50aWNhdGUoKSwocmVxLHJlc3AsbmV4dCk9PntcclxuICAgIGlmKHJlcS5wYXJhbXMpe1xyXG4gICAgICAgcGVzc29hTW9kZWwucGVnYXBvcmlkKHJlcS5wYXJhbXMuaWQpLnRoZW4ocGVzc29hPT57XHJcbiAgICAgICAgICAgcmVzcC5qc29uKHBlc3NvYSk7XHJcbiAgICAgICB9KS5jYXRjaChlcnJvciA9PntcclxuICAgICAgICAgICByZXNwLnN0YXR1cyg0MDQpLmpzb24oe1xyXG4gICAgICAgICAgICAgICBzdGF0dXM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICBlcnIgOiBlcnJvclxyXG4gICAgICAgICAgIH0pO1xyXG4gICAgICAgfSlcclxuICAgIH1cclxufSk7XHJcblxyXG5wZXNzb2FSb3V0ZXIuZ2V0KFwiL2xpc3RhdXN1YXJpb3MvOmVtYWlsXCIsYXV0aC5hdXRoZW50aWNhdGUoKSwocmVxLHJlc3AsbmV4dCk9PntcclxuICAgIGlmKHJlcS5wYXJhbXMpe1xyXG4gICAgICAgIHBlc3NvYU1vZGVsLmxpc3RhU2VtVXN1YXJpb0xvZ2FkbyhyZXEucGFyYW1zLmVtYWlsLChlcnJvcixwZXNzb2EpPT57XHJcbiAgICAgICAgICAgIGlmKCFwZXNzb2EpIHtcclxuICAgICAgICAgICAgICAgIHJlc3Auc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBlcnI6IGVycm9yXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXNwLnN0YXR1cygyMDApLmpzb24ocGVzc29hKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59KTtcclxuXHJcbnBlc3NvYVJvdXRlci5nZXQoXCIvXCIsYXV0aC5hdXRoZW50aWNhdGUoKSwocmVxLHJlc3AsbmV4dCk9PntcclxuICAgIHBlc3NvYU1vZGVsLmxpc3Rhcih7fSwgKGVycm8sIGRhdGEpID0+IHtcclxuICAgICAgICBpZiAoZXJybylcclxuICAgICAgICAgICAgcmVzcC5zdGF0dXMoNTAwKS5zZW5kKGVycm8ubWVzc2FnZSk7XHJcbiAgICAgICAgZWxzZSBpZiAoZGF0YS5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICByZXNwLmpzb24oZGF0YSk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICByZXNwLnN0YXR1cyg0MDQpLmpzb24oeydtZXNzYWdlJzogJ25lbmh1bSByZWdpc3RybyBlbmNvbnRyYWRvJ30pO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHBlc3NvYVJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pessoa-router.js"
      ],
      "names": [
        "pessoaRouter",
        "express",
        "Router",
        "use",
        "post",
        "req",
        "resp",
        "verificaobj",
        "body",
        "pessoaSchemaValidate",
        "pessoaModel",
        "listar",
        "login",
        "email",
        "erro",
        "pessoa",
        "errors",
        "length",
        "status",
        "json",
        "message",
        "inserir",
        "get",
        "auth",
        "authenticate",
        "user",
        "next",
        "params",
        "pegaporid",
        "id",
        "then",
        "error",
        "err",
        "listaSemUsuarioLogado",
        "data",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;AAEAF,YAAY,CAACG,GAAb,CAAiB,uBAAjB;AAEAH,YAAY,CAACI,IAAb,CAAkB,GAAlB,EAAsB,UAACC,GAAD,EAAMC,IAAN,EAAa;AAC/B,MAAIC,WAAW,GAAG,0BAASF,GAAG,CAACG,IAAb,EAAkBC,4BAAlB,CAAlB;;AACAC,0BAAYC,MAAZ,CAAmB;AAAC,mBAAcN,GAAG,CAACG,IAAJ,CAASI,KAAT,CAAeC;AAA9B,GAAnB,EAAwD,UAACC,IAAD,EAAMC,MAAN,EAAe;AACvE,QAAG,CAACA,MAAM,CAAC,CAAD,CAAV,EAAe;AACX,UAAIR,WAAW,CAACS,MAAZ,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AAC/BX,QAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,qBAAW,iBAAiBZ,WAAW,CAACS,MAAZ,CAAmB,CAAnB,EAAsBI;AAAnD,SAAtB;AACH,OAFD,MAGK;AACDV,gCAAYW,OAAZ,CAAoBhB,GAAG,CAACG,IAAxB,EAA8B,UAACY,OAAD,EAAa;AACvCd,UAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,uBAAWC;AAAZ,WAAtB;AACH,SAFD;AAGH;AACJ,KATD,MASK;AACDd,MAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,mBAAW;AAAZ,OAAtB;AACH;AAEA,GAdD;AAeH,CAjBD;AAmBAnB,YAAY,CAACsB,GAAb,CAAiB,KAAjB,EAAuBC,iBAAKC,YAAL,EAAvB,EAA2C,UAACnB,GAAD,EAAKC,IAAL,EAAY;AACnDA,EAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAClBD,IAAAA,MAAM,EAAE,IADU;AAElBO,IAAAA,IAAI,EAAEpB,GAAG,CAACoB;AAFQ,GAAtB;AAIH,CALD;AAOAzB,YAAY,CAACsB,GAAb,CAAiB,MAAjB,EAAwBC,iBAAKC,YAAL,EAAxB,EAA4C,UAACnB,GAAD,EAAKC,IAAL,EAAUoB,IAAV,EAAiB;AACzD,MAAGrB,GAAG,CAACsB,MAAP,EAAc;AACXjB,4BAAYkB,SAAZ,CAAsBvB,GAAG,CAACsB,MAAJ,CAAWE,EAAjC,EAAqCC,IAArC,CAA0C,UAAAf,MAAM,EAAE;AAC9CT,MAAAA,IAAI,CAACa,IAAL,CAAUJ,MAAV;AACH,KAFD,WAES,UAAAgB,KAAK,EAAG;AACbzB,MAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAClBD,QAAAA,MAAM,EAAE,KADU;AAElBc,QAAAA,GAAG,EAAGD;AAFY,OAAtB;AAIH,KAPD;AAQF;AACJ,CAXD;AAaA/B,YAAY,CAACsB,GAAb,CAAiB,uBAAjB,EAAyCC,iBAAKC,YAAL,EAAzC,EAA6D,UAACnB,GAAD,EAAKC,IAAL,EAAUoB,IAAV,EAAiB;AAC1E,MAAGrB,GAAG,CAACsB,MAAP,EAAc;AACVjB,4BAAYuB,qBAAZ,CAAkC5B,GAAG,CAACsB,MAAJ,CAAWd,KAA7C,EAAmD,UAACkB,KAAD,EAAOhB,MAAP,EAAgB;AAC/D,UAAG,CAACA,MAAJ,EAAY;AACRT,QAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAClBD,UAAAA,MAAM,EAAE,KADU;AAElBc,UAAAA,GAAG,EAAED;AAFa,SAAtB;AAIH;;AACDzB,MAAAA,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsBJ,MAAtB;AACH,KARD;AASH;AACJ,CAZD;AAcAf,YAAY,CAACsB,GAAb,CAAiB,GAAjB,EAAqBC,iBAAKC,YAAL,EAArB,EAAyC,UAACnB,GAAD,EAAKC,IAAL,EAAUoB,IAAV,EAAiB;AACtDhB,0BAAYC,MAAZ,CAAmB,EAAnB,EAAuB,UAACG,IAAD,EAAOoB,IAAP,EAAgB;AACnC,QAAIpB,IAAJ,EACIR,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBiB,IAAjB,CAAsBrB,IAAI,CAACM,OAA3B,EADJ,KAEK,IAAIc,IAAI,CAACjB,MAAL,GAAc,CAAlB,EACDX,IAAI,CAACa,IAAL,CAAUe,IAAV,EADC,KAGD5B,IAAI,CAACY,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,iBAAW;AAAZ,KAAtB;AACP,GAPD;AAQH,CATD;eAYenB,Y",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "sourcesContent": [
        "import express from \"express\";\r\nimport { validate } from \"jsonschema\";\r\nimport cors from \"cors\";\r\nimport auth from \"./auth.js\";\r\n\r\nimport pessoaModel from \"../models/pessoa-model\";\r\nimport {pessoaSchemaValidate} from \"../Schemas/pessoa.schema\";\r\n\r\nconst pessoaRouter = express.Router();\r\n\r\npessoaRouter.use(cors());\r\n\r\npessoaRouter.post(\"/\",(req, resp)=>{\r\n    let verificaobj = validate(req.body,pessoaSchemaValidate);\r\n    pessoaModel.listar({\"login.email\":req.body.login.email},(erro,pessoa)=>{\r\n    if(!pessoa[0]) {\r\n        if (verificaobj.errors.length > 0) {\r\n            resp.status(400).json({'message': \"Bad request \" + verificaobj.errors[0].message});\r\n        }\r\n        else {\r\n            pessoaModel.inserir(req.body, (message) => {\r\n                resp.status(201).json({'message': message});\r\n            });\r\n        }\r\n    }else{\r\n        resp.status(500).json({'message': \"E-mail já cadastrado\"});\r\n    }\r\n\r\n    })\r\n});\r\n\r\npessoaRouter.get(\"/me\",auth.authenticate(),(req,resp)=>{\r\n    resp.status(200).json({\r\n        status: true,\r\n        user: req.user\r\n    })\r\n});\r\n\r\npessoaRouter.get(\"/:id\",auth.authenticate(),(req,resp,next)=>{\r\n    if(req.params){\r\n       pessoaModel.pegaporid(req.params.id).then(pessoa=>{\r\n           resp.json(pessoa);\r\n       }).catch(error =>{\r\n           resp.status(404).json({\r\n               status: false,\r\n               err : error\r\n           });\r\n       })\r\n    }\r\n});\r\n\r\npessoaRouter.get(\"/listausuarios/:email\",auth.authenticate(),(req,resp,next)=>{\r\n    if(req.params){\r\n        pessoaModel.listaSemUsuarioLogado(req.params.email,(error,pessoa)=>{\r\n            if(!pessoa) {\r\n                resp.status(404).json({\r\n                    status: false,\r\n                    err: error\r\n                });\r\n            }\r\n            resp.status(200).json(pessoa);\r\n        })\r\n    }\r\n});\r\n\r\npessoaRouter.get(\"/\",auth.authenticate(),(req,resp,next)=>{\r\n    pessoaModel.listar({}, (erro, data) => {\r\n        if (erro)\r\n            resp.status(500).send(erro.message);\r\n        else if (data.length > 0)\r\n            resp.json(data);\r\n        else\r\n            resp.status(404).json({'message': 'nenhum registro encontrado'});\r\n    });\r\n});\r\n\r\n\r\nexport default pessoaRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128383
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _passportJwt = require(\"passport-jwt\");\n\nvar _config = _interopRequireDefault(require(\"./../config\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _pessoa = require(\"../Schemas/pessoa.schema\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar pessoa = new _mongoose[\"default\"].model('pessoa', _pessoa.pessoaSchemaValidate);\n\n_passport[\"default\"].use('login', new _passportJwt.Strategy(_config[\"default\"], function (payload, callback) {\n  pessoa.findById(payload.id, function (err, user) {\n    if (!user) {\n      return callback(null, false);\n    }\n\n    return callback(null, user);\n  }).select({\n    nome: 1,\n    \"login.email\": 1,\n    qtdcoinstransf: 1,\n    qtdcoins: 1\n  });\n}));\n\nfunction initialize() {\n  return _passport[\"default\"].initialize();\n}\n\nfunction authenticate() {\n  return _passport[\"default\"].authenticate('login', {\n    session: false\n  });\n}\n\nvar _default = {\n  initialize: initialize,\n  authenticate: authenticate\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsicGVzc29hIiwibW9uZ29vc2UiLCJtb2RlbCIsInBlc3NvYVNjaGVtYVZhbGlkYXRlIiwiUGFzc3BvcnQiLCJ1c2UiLCJTdHJhdGVneSIsImp3dENvbmZpZyIsInBheWxvYWQiLCJjYWxsYmFjayIsImZpbmRCeUlkIiwiaWQiLCJlcnIiLCJ1c2VyIiwic2VsZWN0Iiwibm9tZSIsInF0ZGNvaW5zdHJhbnNmIiwicXRkY29pbnMiLCJpbml0aWFsaXplIiwiYXV0aGVudGljYXRlIiwic2Vzc2lvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBSUEsTUFBTSxHQUFHLElBQUlDLHFCQUFTQyxLQUFiLENBQW1CLFFBQW5CLEVBQTRCQyw0QkFBNUIsQ0FBYjs7QUFFQUMscUJBQVNDLEdBQVQsQ0FBYSxPQUFiLEVBQXNCLElBQUlDLHFCQUFKLENBQWFDLGtCQUFiLEVBQXVCLFVBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUVoRVQsRUFBQUEsTUFBTSxDQUFDVSxRQUFQLENBQWdCRixPQUFPLENBQUNHLEVBQXhCLEVBQTRCLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ3ZDLFFBQUksQ0FBQ0EsSUFBTCxFQUFXO0FBQ1AsYUFBT0osUUFBUSxDQUFDLElBQUQsRUFBTyxLQUFQLENBQWY7QUFDSDs7QUFDRCxXQUFPQSxRQUFRLENBQUMsSUFBRCxFQUFPSSxJQUFQLENBQWY7QUFDSCxHQUxELEVBS0dDLE1BTEgsQ0FLVTtBQUFDQyxJQUFBQSxJQUFJLEVBQUUsQ0FBUDtBQUFXLG1CQUFlLENBQTFCO0FBQThCQyxJQUFBQSxjQUFjLEVBQUUsQ0FBOUM7QUFBaURDLElBQUFBLFFBQVEsRUFBRTtBQUEzRCxHQUxWO0FBTUgsQ0FScUIsQ0FBdEI7O0FBVUEsU0FBU0MsVUFBVCxHQUFzQjtBQUNuQixTQUFPZCxxQkFBU2MsVUFBVCxFQUFQO0FBQ0Y7O0FBRUQsU0FBU0MsWUFBVCxHQUF3QjtBQUNwQixTQUFPZixxQkFBU2UsWUFBVCxDQUFzQixPQUF0QixFQUErQjtBQUFDQyxJQUFBQSxPQUFPLEVBQUU7QUFBVixHQUEvQixDQUFQO0FBRUg7O2VBRWM7QUFDWEYsRUFBQUEsVUFBVSxFQUFWQSxVQURXO0FBRVhDLEVBQUFBLFlBQVksRUFBWkE7QUFGVyxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxwYXRocyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmF0ZWd5IH0gZnJvbSBcInBhc3Nwb3J0LWp3dFwiIDtcclxuaW1wb3J0IGp3dENvbmZpZyBmcm9tIFwiLi8uLi9jb25maWdcIjtcclxuaW1wb3J0IFBhc3Nwb3J0IGZyb20gXCJwYXNzcG9ydFwiO1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcbmltcG9ydCB7IHBlc3NvYVNjaGVtYVZhbGlkYXRlIH0gZnJvbSBcIi4uL1NjaGVtYXMvcGVzc29hLnNjaGVtYVwiO1xyXG5cclxubGV0IHBlc3NvYSA9IG5ldyBtb25nb29zZS5tb2RlbCgncGVzc29hJyxwZXNzb2FTY2hlbWFWYWxpZGF0ZSk7XHJcblxyXG5QYXNzcG9ydC51c2UoJ2xvZ2luJywgbmV3IFN0cmF0ZWd5KGp3dENvbmZpZywocGF5bG9hZCwgY2FsbGJhY2spID0+IHtcclxuXHJcbiAgICBwZXNzb2EuZmluZEJ5SWQocGF5bG9hZC5pZCwgKGVyciwgdXNlcikgPT4ge1xyXG4gICAgICAgIGlmICghdXNlcikge1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgdXNlcik7XHJcbiAgICB9KS5zZWxlY3Qoe25vbWU6IDEgLCBcImxvZ2luLmVtYWlsXCI6IDEgLCBxdGRjb2luc3RyYW5zZjogMSAscXRkY29pbnM6IDF9KVxyXG59KSk7XHJcblxyXG5mdW5jdGlvbiBpbml0aWFsaXplKCkge1xyXG4gICByZXR1cm4gUGFzc3BvcnQuaW5pdGlhbGl6ZSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhdXRoZW50aWNhdGUoKSB7XHJcbiAgICByZXR1cm4gUGFzc3BvcnQuYXV0aGVudGljYXRlKCdsb2dpbicsIHtzZXNzaW9uOiBmYWxzZX0pXHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBpbml0aWFsaXplLFxyXG4gICAgYXV0aGVudGljYXRlXHJcbn1cclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "pessoa",
        "mongoose",
        "model",
        "pessoaSchemaValidate",
        "Passport",
        "use",
        "Strategy",
        "jwtConfig",
        "payload",
        "callback",
        "findById",
        "id",
        "err",
        "user",
        "select",
        "nome",
        "qtdcoinstransf",
        "qtdcoins",
        "initialize",
        "authenticate",
        "session"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,MAAM,GAAG,IAAIC,qBAASC,KAAb,CAAmB,QAAnB,EAA4BC,4BAA5B,CAAb;;AAEAC,qBAASC,GAAT,CAAa,OAAb,EAAsB,IAAIC,qBAAJ,CAAaC,kBAAb,EAAuB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAEhET,EAAAA,MAAM,CAACU,QAAP,CAAgBF,OAAO,CAACG,EAAxB,EAA4B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACvC,QAAI,CAACA,IAAL,EAAW;AACP,aAAOJ,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAf;AACH;;AACD,WAAOA,QAAQ,CAAC,IAAD,EAAOI,IAAP,CAAf;AACH,GALD,EAKGC,MALH,CAKU;AAACC,IAAAA,IAAI,EAAE,CAAP;AAAW,mBAAe,CAA1B;AAA8BC,IAAAA,cAAc,EAAE,CAA9C;AAAiDC,IAAAA,QAAQ,EAAE;AAA3D,GALV;AAMH,CARqB,CAAtB;;AAUA,SAASC,UAAT,GAAsB;AACnB,SAAOd,qBAASc,UAAT,EAAP;AACF;;AAED,SAASC,YAAT,GAAwB;AACpB,SAAOf,qBAASe,YAAT,CAAsB,OAAtB,EAA+B;AAACC,IAAAA,OAAO,EAAE;AAAV,GAA/B,CAAP;AAEH;;eAEc;AACXF,EAAAA,UAAU,EAAVA,UADW;AAEXC,EAAAA,YAAY,EAAZA;AAFW,C",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "sourcesContent": [
        "import { Strategy } from \"passport-jwt\" ;\r\nimport jwtConfig from \"./../config\";\r\nimport Passport from \"passport\";\r\nimport mongoose from \"mongoose\";\r\nimport { pessoaSchemaValidate } from \"../Schemas/pessoa.schema\";\r\n\r\nlet pessoa = new mongoose.model('pessoa',pessoaSchemaValidate);\r\n\r\nPassport.use('login', new Strategy(jwtConfig,(payload, callback) => {\r\n\r\n    pessoa.findById(payload.id, (err, user) => {\r\n        if (!user) {\r\n            return callback(null, false);\r\n        }\r\n        return callback(null, user);\r\n    }).select({nome: 1 , \"login.email\": 1 , qtdcoinstransf: 1 ,qtdcoins: 1})\r\n}));\r\n\r\nfunction initialize() {\r\n   return Passport.initialize();\r\n}\r\n\r\nfunction authenticate() {\r\n    return Passport.authenticate('login', {session: false})\r\n\r\n}\r\n\r\nexport default {\r\n    initialize,\r\n    authenticate\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128382
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\\\\transferencia-router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\transferencia-router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\transferencia-router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\transferencia-router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
        "sourceFileName": "transferencia-router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsonschema = require(\"jsonschema\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth\"));\n\nvar _transferenciaModel = _interopRequireDefault(require(\"../models/transferencia-model\"));\n\nvar _transferencia = require(\"../Schemas/transferencia.schema\");\n\nvar _pessoaModel = _interopRequireDefault(require(\"../models/pessoa-model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar transferenciaRouter = _express[\"default\"].Router();\n\ntransferenciaRouter.use((0, _cors[\"default\"])());\ntransferenciaRouter.post(\"/\", _auth[\"default\"].authenticate(), function (req, resp, next) {\n  var verificaobj = (0, _jsonschema.validate)(req.body, _transferencia.transferenciaSchemaValidate);\n\n  if (verificaobj.errors.length > 0) {\n    resp.status(400).json({\n      'message': \"Bad request \" + verificaobj.errors[0].message\n    });\n  } else {\n    _transferenciaModel[\"default\"].inserir(req.body, function (result, message) {\n      if (result) {\n        resp.status(201).json({\n          'message': message\n        });\n      } else {\n        resp.status(500).json({\n          'message': message\n        });\n      }\n    });\n  }\n});\n\nfunction joinPessoaTransf(_x) {\n  return _joinPessoaTransf.apply(this, arguments);\n}\n\nfunction _joinPessoaTransf() {\n  _joinPessoaTransf = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(params) {\n    var transf, i;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Array.isArray(params)) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _transferenciaModel[\"default\"].listarEnvolvido(params);\n\n          case 3:\n            transf = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _transferenciaModel[\"default\"].listar(params);\n\n          case 8:\n            transf = _context.sent;\n\n          case 9:\n            i = 0;\n\n          case 10:\n            if (!(i < transf.length)) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 13;\n            return _pessoaModel[\"default\"].pegaporid(transf[i].doador);\n\n          case 13:\n            transf[i].doador = _context.sent;\n            _context.next = 16;\n            return _pessoaModel[\"default\"].pegaporid(transf[i].recebedor);\n\n          case 16:\n            transf[i].recebedor = _context.sent;\n\n          case 17:\n            i++;\n            _context.next = 10;\n            break;\n\n          case 20:\n            return _context.abrupt(\"return\", transf);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _joinPessoaTransf.apply(this, arguments);\n}\n\ntransferenciaRouter.get(\"/recebidas/:recebedor\", _auth[\"default\"].authenticate(), function (req, resp) {\n  console.log(req.params.recebedor);\n  joinPessoaTransf({\n    recebedor: req.params.recebedor\n  }).then(function (resposta) {\n    resp.json(resposta);\n  });\n});\ntransferenciaRouter.get(\"/remetidas/:doador\", _auth[\"default\"].authenticate(), function (req, resp) {\n  joinPessoaTransf({\n    doador: req.params.doador\n  }).then(function (resposta) {\n    resp.json(resposta);\n  });\n});\ntransferenciaRouter.get(\"/envolvido/:id\", _auth[\"default\"].authenticate(), function (req, resp) {\n  joinPessoaTransf([{\n    doador: req.params.id\n  }, {\n    recebedor: req.params.id\n  }]).then(function (resposta) {\n    resp.json(resposta);\n  });\n});\ntransferenciaRouter.get(\"/\", function (req, resp, next) {\n  joinPessoaTransf().then(function (resposta) {\n    resp.json(resposta);\n  });\n});\nvar _default = transferenciaRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZmVyZW5jaWEtcm91dGVyLmpzIl0sIm5hbWVzIjpbInRyYW5zZmVyZW5jaWFSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwidXNlIiwicG9zdCIsImF1dGgiLCJhdXRoZW50aWNhdGUiLCJyZXEiLCJyZXNwIiwibmV4dCIsInZlcmlmaWNhb2JqIiwiYm9keSIsInRyYW5zZmVyZW5jaWFTY2hlbWFWYWxpZGF0ZSIsImVycm9ycyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwidHJhbnNmZXJlbmNpYU1vZGVsIiwiaW5zZXJpciIsInJlc3VsdCIsImpvaW5QZXNzb2FUcmFuc2YiLCJwYXJhbXMiLCJBcnJheSIsImlzQXJyYXkiLCJsaXN0YXJFbnZvbHZpZG8iLCJ0cmFuc2YiLCJsaXN0YXIiLCJpIiwicGVzc29hTW9kZWwiLCJwZWdhcG9yaWQiLCJkb2Fkb3IiLCJyZWNlYmVkb3IiLCJnZXQiLCJjb25zb2xlIiwibG9nIiwidGhlbiIsInJlc3Bvc3RhIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxtQkFBbUIsR0FBR0Msb0JBQVFDLE1BQVIsRUFBNUI7O0FBRUFGLG1CQUFtQixDQUFDRyxHQUFwQixDQUF3Qix1QkFBeEI7QUFFQUgsbUJBQW1CLENBQUNJLElBQXBCLENBQXlCLEdBQXpCLEVBQThCQyxpQkFBS0MsWUFBTCxFQUE5QixFQUFtRCxVQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBWUMsSUFBWixFQUFxQjtBQUNwRSxNQUFJQyxXQUFXLEdBQUcsMEJBQVNILEdBQUcsQ0FBQ0ksSUFBYixFQUFtQkMsMENBQW5CLENBQWxCOztBQUVBLE1BQUlGLFdBQVcsQ0FBQ0csTUFBWixDQUFtQkMsTUFBbkIsR0FBNEIsQ0FBaEMsRUFBbUM7QUFDL0JOLElBQUFBLElBQUksQ0FBQ08sTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCO0FBQUMsaUJBQVcsaUJBQWlCTixXQUFXLENBQUNHLE1BQVosQ0FBbUIsQ0FBbkIsRUFBc0JJO0FBQW5ELEtBQXRCO0FBQ0gsR0FGRCxNQUdLO0FBQ0RDLG1DQUFtQkMsT0FBbkIsQ0FBMkJaLEdBQUcsQ0FBQ0ksSUFBL0IsRUFBcUMsVUFBQ1MsTUFBRCxFQUFTSCxPQUFULEVBQXFCO0FBQ3RELFVBQUlHLE1BQUosRUFBWTtBQUNSWixRQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUFDLHFCQUFXQztBQUFaLFNBQXRCO0FBQ0gsT0FGRCxNQUVPO0FBQ0hULFFBQUFBLElBQUksQ0FBQ08sTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCO0FBQUMscUJBQVdDO0FBQVosU0FBdEI7QUFDSDtBQUNKLEtBTkQ7QUFPSDtBQUNKLENBZkQ7O1NBaUJlSSxnQjs7Ozs7OzswQkFBZixpQkFBZ0NDLE1BQWhDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUVPQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0YsTUFBZCxDQUZQO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsbUJBR3VCSiwrQkFBbUJPLGVBQW5CLENBQW1DSCxNQUFuQyxDQUh2Qjs7QUFBQTtBQUdRSSxZQUFBQSxNQUhSO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsbUJBTXVCUiwrQkFBbUJTLE1BQW5CLENBQTBCTCxNQUExQixDQU52Qjs7QUFBQTtBQU1RSSxZQUFBQSxNQU5SOztBQUFBO0FBUWFFLFlBQUFBLENBUmIsR0FRaUIsQ0FSakI7O0FBQUE7QUFBQSxrQkFRb0JBLENBQUMsR0FBR0YsTUFBTSxDQUFDWixNQVIvQjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQVNpQ2Usd0JBQVlDLFNBQVosQ0FBc0JKLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFOLENBQVVHLE1BQWhDLENBVGpDOztBQUFBO0FBU1FMLFlBQUFBLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFOLENBQVVHLE1BVGxCO0FBQUE7QUFBQSxtQkFVb0NGLHdCQUFZQyxTQUFaLENBQXNCSixNQUFNLENBQUNFLENBQUQsQ0FBTixDQUFVSSxTQUFoQyxDQVZwQzs7QUFBQTtBQVVRTixZQUFBQSxNQUFNLENBQUNFLENBQUQsQ0FBTixDQUFVSSxTQVZsQjs7QUFBQTtBQVF1Q0osWUFBQUEsQ0FBQyxFQVJ4QztBQUFBO0FBQUE7O0FBQUE7QUFBQSw2Q0FZV0YsTUFaWDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O0FBZUExQixtQkFBbUIsQ0FBQ2lDLEdBQXBCLENBQXdCLHVCQUF4QixFQUFpRDVCLGlCQUFLQyxZQUFMLEVBQWpELEVBQXNFLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ2pGMEIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVk1QixHQUFHLENBQUNlLE1BQUosQ0FBV1UsU0FBdkI7QUFDQVgsRUFBQUEsZ0JBQWdCLENBQUM7QUFBQ1csSUFBQUEsU0FBUyxFQUFFekIsR0FBRyxDQUFDZSxNQUFKLENBQVdVO0FBQXZCLEdBQUQsQ0FBaEIsQ0FDS0ksSUFETCxDQUNVLFVBQUFDLFFBQVEsRUFBSTtBQUNkN0IsSUFBQUEsSUFBSSxDQUFDUSxJQUFMLENBQVVxQixRQUFWO0FBQ0gsR0FITDtBQUlILENBTkQ7QUFTQXJDLG1CQUFtQixDQUFDaUMsR0FBcEIsQ0FBd0Isb0JBQXhCLEVBQThDNUIsaUJBQUtDLFlBQUwsRUFBOUMsRUFBbUUsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDOUVhLEVBQUFBLGdCQUFnQixDQUFDO0FBQUNVLElBQUFBLE1BQU0sRUFBRXhCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXUztBQUFwQixHQUFELENBQWhCLENBQ0tLLElBREwsQ0FDVSxVQUFBQyxRQUFRLEVBQUk7QUFDZDdCLElBQUFBLElBQUksQ0FBQ1EsSUFBTCxDQUFVcUIsUUFBVjtBQUNILEdBSEw7QUFJSCxDQUxEO0FBT0FyQyxtQkFBbUIsQ0FBQ2lDLEdBQXBCLENBQXdCLGdCQUF4QixFQUEwQzVCLGlCQUFLQyxZQUFMLEVBQTFDLEVBQStELFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQzFFYSxFQUFBQSxnQkFBZ0IsQ0FBQyxDQUFDO0FBQUNVLElBQUFBLE1BQU0sRUFBRXhCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXZ0I7QUFBcEIsR0FBRCxFQUF5QjtBQUFDTixJQUFBQSxTQUFTLEVBQUd6QixHQUFHLENBQUNlLE1BQUosQ0FBV2dCO0FBQXhCLEdBQXpCLENBQUQsQ0FBaEIsQ0FDS0YsSUFETCxDQUNVLFVBQUFDLFFBQVEsRUFBSTtBQUNkN0IsSUFBQUEsSUFBSSxDQUFDUSxJQUFMLENBQVVxQixRQUFWO0FBQ0gsR0FITDtBQUlILENBTEQ7QUFPQXJDLG1CQUFtQixDQUFDaUMsR0FBcEIsQ0FBd0IsR0FBeEIsRUFBNkIsVUFBQzFCLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxJQUFaLEVBQXFCO0FBQzlDWSxFQUFBQSxnQkFBZ0IsR0FDWGUsSUFETCxDQUNVLFVBQUFDLFFBQVEsRUFBSTtBQUNkN0IsSUFBQUEsSUFBSSxDQUFDUSxJQUFMLENBQVVxQixRQUFWO0FBQ0gsR0FITDtBQUlILENBTEQ7ZUFPZXJDLG1CIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxwYXRocyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7dmFsaWRhdGV9IGZyb20gXCJqc29uc2NoZW1hXCI7XHJcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XHJcbmltcG9ydCBhdXRoIGZyb20gXCIuL2F1dGhcIjtcclxuXHJcbmltcG9ydCB0cmFuc2ZlcmVuY2lhTW9kZWwgZnJvbSBcIi4uL21vZGVscy90cmFuc2ZlcmVuY2lhLW1vZGVsXCI7XHJcbmltcG9ydCB7dHJhbnNmZXJlbmNpYVNjaGVtYVZhbGlkYXRlfSBmcm9tIFwiLi4vU2NoZW1hcy90cmFuc2ZlcmVuY2lhLnNjaGVtYVwiO1xyXG5pbXBvcnQgcGVzc29hTW9kZWwgZnJvbSBcIi4uL21vZGVscy9wZXNzb2EtbW9kZWxcIjtcclxuXHJcbmNvbnN0IHRyYW5zZmVyZW5jaWFSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxudHJhbnNmZXJlbmNpYVJvdXRlci51c2UoY29ycygpKTtcclxuXHJcbnRyYW5zZmVyZW5jaWFSb3V0ZXIucG9zdChcIi9cIiwgYXV0aC5hdXRoZW50aWNhdGUoKSwgKHJlcSwgcmVzcCwgbmV4dCkgPT4ge1xyXG4gICAgbGV0IHZlcmlmaWNhb2JqID0gdmFsaWRhdGUocmVxLmJvZHksIHRyYW5zZmVyZW5jaWFTY2hlbWFWYWxpZGF0ZSk7XHJcblxyXG4gICAgaWYgKHZlcmlmaWNhb2JqLmVycm9ycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmVzcC5zdGF0dXMoNDAwKS5qc29uKHsnbWVzc2FnZSc6IFwiQmFkIHJlcXVlc3QgXCIgKyB2ZXJpZmljYW9iai5lcnJvcnNbMF0ubWVzc2FnZX0pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgdHJhbnNmZXJlbmNpYU1vZGVsLmluc2VyaXIocmVxLmJvZHksIChyZXN1bHQsIG1lc3NhZ2UpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgcmVzcC5zdGF0dXMoMjAxKS5qc29uKHsnbWVzc2FnZSc6IG1lc3NhZ2V9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlc3Auc3RhdHVzKDUwMCkuanNvbih7J21lc3NhZ2UnOiBtZXNzYWdlfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5hc3luYyBmdW5jdGlvbiBqb2luUGVzc29hVHJhbnNmKHBhcmFtcykge1xyXG5sZXQgdHJhbnNmO1xyXG4gICAgaWYoQXJyYXkuaXNBcnJheShwYXJhbXMpKXtcclxuICAgICAgICB0cmFuc2YgPSBhd2FpdCB0cmFuc2ZlcmVuY2lhTW9kZWwubGlzdGFyRW52b2x2aWRvKHBhcmFtcyk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0cmFuc2YgPSBhd2FpdCB0cmFuc2ZlcmVuY2lhTW9kZWwubGlzdGFyKHBhcmFtcyk7XHJcbiAgICB9XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRyYW5zZi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHRyYW5zZltpXS5kb2Fkb3IgPSBhd2FpdCBwZXNzb2FNb2RlbC5wZWdhcG9yaWQodHJhbnNmW2ldLmRvYWRvcik7XHJcbiAgICAgICAgdHJhbnNmW2ldLnJlY2ViZWRvciA9IGF3YWl0IHBlc3NvYU1vZGVsLnBlZ2Fwb3JpZCh0cmFuc2ZbaV0ucmVjZWJlZG9yKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cmFuc2Y7XHJcbn1cclxuXHJcbnRyYW5zZmVyZW5jaWFSb3V0ZXIuZ2V0KFwiL3JlY2ViaWRhcy86cmVjZWJlZG9yXCIsIGF1dGguYXV0aGVudGljYXRlKCksIChyZXEsIHJlc3ApID0+IHtcclxuICAgIGNvbnNvbGUubG9nKHJlcS5wYXJhbXMucmVjZWJlZG9yKTtcclxuICAgIGpvaW5QZXNzb2FUcmFuc2Yoe3JlY2ViZWRvcjogcmVxLnBhcmFtcy5yZWNlYmVkb3J9KVxyXG4gICAgICAgIC50aGVuKHJlc3Bvc3RhID0+IHtcclxuICAgICAgICAgICAgcmVzcC5qc29uKHJlc3Bvc3RhKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG5cclxudHJhbnNmZXJlbmNpYVJvdXRlci5nZXQoXCIvcmVtZXRpZGFzLzpkb2Fkb3JcIiwgYXV0aC5hdXRoZW50aWNhdGUoKSwgKHJlcSwgcmVzcCkgPT4ge1xyXG4gICAgam9pblBlc3NvYVRyYW5zZih7ZG9hZG9yOiByZXEucGFyYW1zLmRvYWRvcn0pXHJcbiAgICAgICAgLnRoZW4ocmVzcG9zdGEgPT4ge1xyXG4gICAgICAgICAgICByZXNwLmpzb24ocmVzcG9zdGEpO1xyXG4gICAgICAgIH0pO1xyXG59KTtcclxuXHJcbnRyYW5zZmVyZW5jaWFSb3V0ZXIuZ2V0KFwiL2Vudm9sdmlkby86aWRcIiwgYXV0aC5hdXRoZW50aWNhdGUoKSwgKHJlcSwgcmVzcCkgPT4ge1xyXG4gICAgam9pblBlc3NvYVRyYW5zZihbe2RvYWRvcjogcmVxLnBhcmFtcy5pZH0se3JlY2ViZWRvciA6IHJlcS5wYXJhbXMuaWR9XSlcclxuICAgICAgICAudGhlbihyZXNwb3N0YSA9PiB7XHJcbiAgICAgICAgICAgIHJlc3AuanNvbihyZXNwb3N0YSk7XHJcbiAgICAgICAgfSk7XHJcbn0pO1xyXG5cclxudHJhbnNmZXJlbmNpYVJvdXRlci5nZXQoXCIvXCIsIChyZXEsIHJlc3AsIG5leHQpID0+IHtcclxuICAgIGpvaW5QZXNzb2FUcmFuc2YoKVxyXG4gICAgICAgIC50aGVuKHJlc3Bvc3RhID0+IHtcclxuICAgICAgICAgICAgcmVzcC5qc29uKHJlc3Bvc3RhKTtcclxuICAgICAgICB9KTtcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0cmFuc2ZlcmVuY2lhUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transferencia-router.js"
      ],
      "names": [
        "transferenciaRouter",
        "express",
        "Router",
        "use",
        "post",
        "auth",
        "authenticate",
        "req",
        "resp",
        "next",
        "verificaobj",
        "body",
        "transferenciaSchemaValidate",
        "errors",
        "length",
        "status",
        "json",
        "message",
        "transferenciaModel",
        "inserir",
        "result",
        "joinPessoaTransf",
        "params",
        "Array",
        "isArray",
        "listarEnvolvido",
        "transf",
        "listar",
        "i",
        "pessoaModel",
        "pegaporid",
        "doador",
        "recebedor",
        "get",
        "console",
        "log",
        "then",
        "resposta",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,mBAAmB,GAAGC,oBAAQC,MAAR,EAA5B;;AAEAF,mBAAmB,CAACG,GAApB,CAAwB,uBAAxB;AAEAH,mBAAmB,CAACI,IAApB,CAAyB,GAAzB,EAA8BC,iBAAKC,YAAL,EAA9B,EAAmD,UAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AACpE,MAAIC,WAAW,GAAG,0BAASH,GAAG,CAACI,IAAb,EAAmBC,0CAAnB,CAAlB;;AAEA,MAAIF,WAAW,CAACG,MAAZ,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AAC/BN,IAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,iBAAW,iBAAiBN,WAAW,CAACG,MAAZ,CAAmB,CAAnB,EAAsBI;AAAnD,KAAtB;AACH,GAFD,MAGK;AACDC,mCAAmBC,OAAnB,CAA2BZ,GAAG,CAACI,IAA/B,EAAqC,UAACS,MAAD,EAASH,OAAT,EAAqB;AACtD,UAAIG,MAAJ,EAAY;AACRZ,QAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,qBAAWC;AAAZ,SAAtB;AACH,OAFD,MAEO;AACHT,QAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,qBAAWC;AAAZ,SAAtB;AACH;AACJ,KAND;AAOH;AACJ,CAfD;;SAiBeI,gB;;;;;;;0BAAf,iBAAgCC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEOC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAFP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGuBJ,+BAAmBO,eAAnB,CAAmCH,MAAnC,CAHvB;;AAAA;AAGQI,YAAAA,MAHR;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAMuBR,+BAAmBS,MAAnB,CAA0BL,MAA1B,CANvB;;AAAA;AAMQI,YAAAA,MANR;;AAAA;AAQaE,YAAAA,CARb,GAQiB,CARjB;;AAAA;AAAA,kBAQoBA,CAAC,GAAGF,MAAM,CAACZ,MAR/B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASiCe,wBAAYC,SAAZ,CAAsBJ,MAAM,CAACE,CAAD,CAAN,CAAUG,MAAhC,CATjC;;AAAA;AASQL,YAAAA,MAAM,CAACE,CAAD,CAAN,CAAUG,MATlB;AAAA;AAAA,mBAUoCF,wBAAYC,SAAZ,CAAsBJ,MAAM,CAACE,CAAD,CAAN,CAAUI,SAAhC,CAVpC;;AAAA;AAUQN,YAAAA,MAAM,CAACE,CAAD,CAAN,CAAUI,SAVlB;;AAAA;AAQuCJ,YAAAA,CAAC,EARxC;AAAA;AAAA;;AAAA;AAAA,6CAYWF,MAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA1B,mBAAmB,CAACiC,GAApB,CAAwB,uBAAxB,EAAiD5B,iBAAKC,YAAL,EAAjD,EAAsE,UAACC,GAAD,EAAMC,IAAN,EAAe;AACjF0B,EAAAA,OAAO,CAACC,GAAR,CAAY5B,GAAG,CAACe,MAAJ,CAAWU,SAAvB;AACAX,EAAAA,gBAAgB,CAAC;AAACW,IAAAA,SAAS,EAAEzB,GAAG,CAACe,MAAJ,CAAWU;AAAvB,GAAD,CAAhB,CACKI,IADL,CACU,UAAAC,QAAQ,EAAI;AACd7B,IAAAA,IAAI,CAACQ,IAAL,CAAUqB,QAAV;AACH,GAHL;AAIH,CAND;AASArC,mBAAmB,CAACiC,GAApB,CAAwB,oBAAxB,EAA8C5B,iBAAKC,YAAL,EAA9C,EAAmE,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC9Ea,EAAAA,gBAAgB,CAAC;AAACU,IAAAA,MAAM,EAAExB,GAAG,CAACe,MAAJ,CAAWS;AAApB,GAAD,CAAhB,CACKK,IADL,CACU,UAAAC,QAAQ,EAAI;AACd7B,IAAAA,IAAI,CAACQ,IAAL,CAAUqB,QAAV;AACH,GAHL;AAIH,CALD;AAOArC,mBAAmB,CAACiC,GAApB,CAAwB,gBAAxB,EAA0C5B,iBAAKC,YAAL,EAA1C,EAA+D,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC1Ea,EAAAA,gBAAgB,CAAC,CAAC;AAACU,IAAAA,MAAM,EAAExB,GAAG,CAACe,MAAJ,CAAWgB;AAApB,GAAD,EAAyB;AAACN,IAAAA,SAAS,EAAGzB,GAAG,CAACe,MAAJ,CAAWgB;AAAxB,GAAzB,CAAD,CAAhB,CACKF,IADL,CACU,UAAAC,QAAQ,EAAI;AACd7B,IAAAA,IAAI,CAACQ,IAAL,CAAUqB,QAAV;AACH,GAHL;AAIH,CALD;AAOArC,mBAAmB,CAACiC,GAApB,CAAwB,GAAxB,EAA6B,UAAC1B,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAC9CY,EAAAA,gBAAgB,GACXe,IADL,CACU,UAAAC,QAAQ,EAAI;AACd7B,IAAAA,IAAI,CAACQ,IAAL,CAAUqB,QAAV;AACH,GAHL;AAIH,CALD;eAOerC,mB",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "sourcesContent": [
        "import express from \"express\";\r\nimport {validate} from \"jsonschema\";\r\nimport cors from \"cors\";\r\nimport auth from \"./auth\";\r\n\r\nimport transferenciaModel from \"../models/transferencia-model\";\r\nimport {transferenciaSchemaValidate} from \"../Schemas/transferencia.schema\";\r\nimport pessoaModel from \"../models/pessoa-model\";\r\n\r\nconst transferenciaRouter = express.Router();\r\n\r\ntransferenciaRouter.use(cors());\r\n\r\ntransferenciaRouter.post(\"/\", auth.authenticate(), (req, resp, next) => {\r\n    let verificaobj = validate(req.body, transferenciaSchemaValidate);\r\n\r\n    if (verificaobj.errors.length > 0) {\r\n        resp.status(400).json({'message': \"Bad request \" + verificaobj.errors[0].message});\r\n    }\r\n    else {\r\n        transferenciaModel.inserir(req.body, (result, message) => {\r\n            if (result) {\r\n                resp.status(201).json({'message': message});\r\n            } else {\r\n                resp.status(500).json({'message': message});\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nasync function joinPessoaTransf(params) {\r\nlet transf;\r\n    if(Array.isArray(params)){\r\n        transf = await transferenciaModel.listarEnvolvido(params);\r\n    }\r\n    else {\r\n        transf = await transferenciaModel.listar(params);\r\n    }\r\n    for (let i = 0; i < transf.length; i++) {\r\n        transf[i].doador = await pessoaModel.pegaporid(transf[i].doador);\r\n        transf[i].recebedor = await pessoaModel.pegaporid(transf[i].recebedor);\r\n    }\r\n    return transf;\r\n}\r\n\r\ntransferenciaRouter.get(\"/recebidas/:recebedor\", auth.authenticate(), (req, resp) => {\r\n    console.log(req.params.recebedor);\r\n    joinPessoaTransf({recebedor: req.params.recebedor})\r\n        .then(resposta => {\r\n            resp.json(resposta);\r\n        });\r\n});\r\n\r\n\r\ntransferenciaRouter.get(\"/remetidas/:doador\", auth.authenticate(), (req, resp) => {\r\n    joinPessoaTransf({doador: req.params.doador})\r\n        .then(resposta => {\r\n            resp.json(resposta);\r\n        });\r\n});\r\n\r\ntransferenciaRouter.get(\"/envolvido/:id\", auth.authenticate(), (req, resp) => {\r\n    joinPessoaTransf([{doador: req.params.id},{recebedor : req.params.id}])\r\n        .then(resposta => {\r\n            resp.json(resposta);\r\n        });\r\n});\r\n\r\ntransferenciaRouter.get(\"/\", (req, resp, next) => {\r\n    joinPessoaTransf()\r\n        .then(resposta => {\r\n            resp.json(resposta);\r\n        });\r\n});\r\n\r\nexport default transferenciaRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128385
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\models\\\\transferencia-model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\transferencia-model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\transferencia-model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\transferencia-model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
        "sourceFileName": "transferencia-model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _transferencia = require(\"../Schemas/transferencia.schema\");\n\nvar _pessoaModel = _interopRequireDefault(require(\"./pessoa-model\"));\n\nvar _configDb = require(\"../../../config/config-db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].connect(_configDb.configdb.stringConnection, {\n  useNewUrlParser: true\n});\n\nvar transferenciaschema = new _mongoose[\"default\"].Schema(_transferencia.transferenciaSchemaDb);\n\nvar transferenciaModel = _mongoose[\"default\"].model('transferencias', transferenciaschema);\n\nfunction inserir(parans, callback) {\n  var transferencia = new transferenciaModel(parans);\n\n  var debitou = _pessoaModel[\"default\"].debitacoins(parans.doador, parans.qtdcoinstransf);\n\n  if (debitou) {\n    _pessoaModel[\"default\"].creditacoins(parans.recebedor, parans.qtdcoinstransf);\n\n    transferencia.save(function (err) {\n      if (err) return handleError(err);\n      callback(true, \"Tranferencia realizada com sucesso!\");\n    });\n  } else {\n    callback(false, \"Saldo insulficiente!\");\n  }\n}\n\nfunction listarEnvolvido(parans) {\n  var promise = new Promise(function (resolve, reject) {\n    var trasnf = transferenciaModel.find(parans, function (err, transferencias) {\n      if (err) return handleError(err);\n    });\n    resolve(trasnf);\n  });\n  return promise;\n}\n\nfunction listar(parans) {\n  var promise = new Promise(function (resolve, reject) {\n    var trasnf = transferenciaModel.find({}, function (err, transferencias) {\n      if (err) return handleError(err);\n    }).or(params);\n    resolve(trasnf);\n  });\n  return promise;\n}\n\nvar _default = {\n  inserir: inserir,\n  listar: listar,\n  listarEnvolvido: listarEnvolvido\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZmVyZW5jaWEtbW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjb25uZWN0IiwiY29uZmlnZGIiLCJzdHJpbmdDb25uZWN0aW9uIiwidXNlTmV3VXJsUGFyc2VyIiwidHJhbnNmZXJlbmNpYXNjaGVtYSIsIlNjaGVtYSIsInRyYW5zZmVyZW5jaWFTY2hlbWFEYiIsInRyYW5zZmVyZW5jaWFNb2RlbCIsIm1vZGVsIiwiaW5zZXJpciIsInBhcmFucyIsImNhbGxiYWNrIiwidHJhbnNmZXJlbmNpYSIsImRlYml0b3UiLCJwZXNzb2Ftb2RlbCIsImRlYml0YWNvaW5zIiwiZG9hZG9yIiwicXRkY29pbnN0cmFuc2YiLCJjcmVkaXRhY29pbnMiLCJyZWNlYmVkb3IiLCJzYXZlIiwiZXJyIiwiaGFuZGxlRXJyb3IiLCJsaXN0YXJFbnZvbHZpZG8iLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0cmFzbmYiLCJmaW5kIiwidHJhbnNmZXJlbmNpYXMiLCJsaXN0YXIiLCJvciIsInBhcmFtcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUFBLHFCQUFTQyxPQUFULENBQWlCQyxtQkFBU0MsZ0JBQTFCLEVBQTRDO0FBQUNDLEVBQUFBLGVBQWUsRUFBRTtBQUFsQixDQUE1Qzs7QUFFQSxJQUFJQyxtQkFBbUIsR0FBRyxJQUFJTCxxQkFBU00sTUFBYixDQUFxQkMsb0NBQXJCLENBQTFCOztBQUNBLElBQUlDLGtCQUFrQixHQUFHUixxQkFBU1MsS0FBVCxDQUFlLGdCQUFmLEVBQWdDSixtQkFBaEMsQ0FBekI7O0FBR0EsU0FBU0ssT0FBVCxDQUFpQkMsTUFBakIsRUFBd0JDLFFBQXhCLEVBQWtDO0FBQzlCLE1BQUlDLGFBQWEsR0FBRyxJQUFJTCxrQkFBSixDQUF1QkcsTUFBdkIsQ0FBcEI7O0FBQ0EsTUFBSUcsT0FBTyxHQUFHQyx3QkFBWUMsV0FBWixDQUF3QkwsTUFBTSxDQUFDTSxNQUEvQixFQUFzQ04sTUFBTSxDQUFDTyxjQUE3QyxDQUFkOztBQUNBLE1BQUdKLE9BQUgsRUFBVztBQUNQQyw0QkFBWUksWUFBWixDQUF5QlIsTUFBTSxDQUFDUyxTQUFoQyxFQUEwQ1QsTUFBTSxDQUFDTyxjQUFqRDs7QUFDQUwsSUFBQUEsYUFBYSxDQUFDUSxJQUFkLENBQW1CLFVBQUNDLEdBQUQsRUFBTztBQUN0QixVQUFHQSxHQUFILEVBQU8sT0FBT0MsV0FBVyxDQUFDRCxHQUFELENBQWxCO0FBQ1BWLE1BQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU0scUNBQU4sQ0FBUjtBQUNILEtBSEQ7QUFJSCxHQU5ELE1BT0k7QUFDQUEsSUFBQUEsUUFBUSxDQUFDLEtBQUQsRUFBUyxzQkFBVCxDQUFSO0FBQ0g7QUFDSjs7QUFFRCxTQUFTWSxlQUFULENBQXlCYixNQUF6QixFQUFnQztBQUM1QixNQUFJYyxPQUFPLEdBQUcsSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBU0MsTUFBVCxFQUFrQjtBQUN4QyxRQUFJQyxNQUFNLEdBQUdyQixrQkFBa0IsQ0FBQ3NCLElBQW5CLENBQXdCbkIsTUFBeEIsRUFBK0IsVUFBQ1csR0FBRCxFQUFLUyxjQUFMLEVBQXNCO0FBQzlELFVBQUdULEdBQUgsRUFBTyxPQUFPQyxXQUFXLENBQUNELEdBQUQsQ0FBbEI7QUFDVixLQUZZLENBQWI7QUFHQUssSUFBQUEsT0FBTyxDQUFDRSxNQUFELENBQVA7QUFDSCxHQUxhLENBQWQ7QUFNQSxTQUFPSixPQUFQO0FBQ0g7O0FBRUQsU0FBU08sTUFBVCxDQUFnQnJCLE1BQWhCLEVBQXVCO0FBQ25CLE1BQUljLE9BQU8sR0FBRyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFTQyxNQUFULEVBQWtCO0FBQ3hDLFFBQUlDLE1BQU0sR0FBR3JCLGtCQUFrQixDQUFDc0IsSUFBbkIsQ0FBd0IsRUFBeEIsRUFBMkIsVUFBQ1IsR0FBRCxFQUFLUyxjQUFMLEVBQXNCO0FBQzFELFVBQUdULEdBQUgsRUFBTyxPQUFPQyxXQUFXLENBQUNELEdBQUQsQ0FBbEI7QUFDVixLQUZZLEVBRVZXLEVBRlUsQ0FFUEMsTUFGTyxDQUFiO0FBR0FQLElBQUFBLE9BQU8sQ0FBQ0UsTUFBRCxDQUFQO0FBQ0gsR0FMYSxDQUFkO0FBTUEsU0FBT0osT0FBUDtBQUNIOztlQUNjO0FBQ1hmLEVBQUFBLE9BQU8sRUFBUEEsT0FEVztBQUVYc0IsRUFBQUEsTUFBTSxFQUFOQSxNQUZXO0FBR1hSLEVBQUFBLGVBQWUsRUFBZkE7QUFIVyxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcbmltcG9ydCB7dHJhbnNmZXJlbmNpYVNjaGVtYURifSBmcm9tIFwiLi4vU2NoZW1hcy90cmFuc2ZlcmVuY2lhLnNjaGVtYVwiO1xyXG5pbXBvcnQgcGVzc29hbW9kZWwgZnJvbSBcIi4vcGVzc29hLW1vZGVsXCI7XHJcbmltcG9ydCB7Y29uZmlnZGJ9IGZyb20gXCIuLi8uLi8uLi9jb25maWcvY29uZmlnLWRiXCI7XHJcblxyXG5tb25nb29zZS5jb25uZWN0KGNvbmZpZ2RiLnN0cmluZ0Nvbm5lY3Rpb24sIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcclxuXHJcbmxldCB0cmFuc2ZlcmVuY2lhc2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSggdHJhbnNmZXJlbmNpYVNjaGVtYURiKTtcclxubGV0IHRyYW5zZmVyZW5jaWFNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCd0cmFuc2ZlcmVuY2lhcycsdHJhbnNmZXJlbmNpYXNjaGVtYSk7XHJcblxyXG5cclxuZnVuY3Rpb24gaW5zZXJpcihwYXJhbnMsY2FsbGJhY2spIHtcclxuICAgIGxldCB0cmFuc2ZlcmVuY2lhID0gbmV3IHRyYW5zZmVyZW5jaWFNb2RlbChwYXJhbnMpO1xyXG4gICAgbGV0IGRlYml0b3UgPSBwZXNzb2Ftb2RlbC5kZWJpdGFjb2lucyhwYXJhbnMuZG9hZG9yLHBhcmFucy5xdGRjb2luc3RyYW5zZik7XHJcbiAgICBpZihkZWJpdG91KXtcclxuICAgICAgICBwZXNzb2Ftb2RlbC5jcmVkaXRhY29pbnMocGFyYW5zLnJlY2ViZWRvcixwYXJhbnMucXRkY29pbnN0cmFuc2YpO1xyXG4gICAgICAgIHRyYW5zZmVyZW5jaWEuc2F2ZSgoZXJyKT0+e1xyXG4gICAgICAgICAgICBpZihlcnIpcmV0dXJuIGhhbmRsZUVycm9yKGVycik7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKHRydWUsXCJUcmFuZmVyZW5jaWEgcmVhbGl6YWRhIGNvbSBzdWNlc3NvIVwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGVsc2V7XHJcbiAgICAgICAgY2FsbGJhY2soZmFsc2UgLCBcIlNhbGRvIGluc3VsZmljaWVudGUhXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBsaXN0YXJFbnZvbHZpZG8ocGFyYW5zKXtcclxuICAgIGxldCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+e1xyXG4gICAgICAgIGxldCB0cmFzbmYgPSB0cmFuc2ZlcmVuY2lhTW9kZWwuZmluZChwYXJhbnMsKGVycix0cmFuc2ZlcmVuY2lhcyk9PntcclxuICAgICAgICAgICAgaWYoZXJyKXJldHVybiBoYW5kbGVFcnJvcihlcnIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJlc29sdmUodHJhc25mKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGxpc3RhcihwYXJhbnMpe1xyXG4gICAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpPT57XHJcbiAgICAgICAgbGV0IHRyYXNuZiA9IHRyYW5zZmVyZW5jaWFNb2RlbC5maW5kKHt9LChlcnIsdHJhbnNmZXJlbmNpYXMpPT57XHJcbiAgICAgICAgICAgIGlmKGVycilyZXR1cm4gaGFuZGxlRXJyb3IoZXJyKTtcclxuICAgICAgICB9KS5vcihwYXJhbXMpO1xyXG4gICAgICAgIHJlc29sdmUodHJhc25mKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHByb21pc2U7XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgaW5zZXJpcixcclxuICAgIGxpc3RhcixcclxuICAgIGxpc3RhckVudm9sdmlkb1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transferencia-model.js"
      ],
      "names": [
        "mongoose",
        "connect",
        "configdb",
        "stringConnection",
        "useNewUrlParser",
        "transferenciaschema",
        "Schema",
        "transferenciaSchemaDb",
        "transferenciaModel",
        "model",
        "inserir",
        "parans",
        "callback",
        "transferencia",
        "debitou",
        "pessoamodel",
        "debitacoins",
        "doador",
        "qtdcoinstransf",
        "creditacoins",
        "recebedor",
        "save",
        "err",
        "handleError",
        "listarEnvolvido",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "trasnf",
        "find",
        "transferencias",
        "listar",
        "or",
        "params"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEAA,qBAASC,OAAT,CAAiBC,mBAASC,gBAA1B,EAA4C;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAA5C;;AAEA,IAAIC,mBAAmB,GAAG,IAAIL,qBAASM,MAAb,CAAqBC,oCAArB,CAA1B;;AACA,IAAIC,kBAAkB,GAAGR,qBAASS,KAAT,CAAe,gBAAf,EAAgCJ,mBAAhC,CAAzB;;AAGA,SAASK,OAAT,CAAiBC,MAAjB,EAAwBC,QAAxB,EAAkC;AAC9B,MAAIC,aAAa,GAAG,IAAIL,kBAAJ,CAAuBG,MAAvB,CAApB;;AACA,MAAIG,OAAO,GAAGC,wBAAYC,WAAZ,CAAwBL,MAAM,CAACM,MAA/B,EAAsCN,MAAM,CAACO,cAA7C,CAAd;;AACA,MAAGJ,OAAH,EAAW;AACPC,4BAAYI,YAAZ,CAAyBR,MAAM,CAACS,SAAhC,EAA0CT,MAAM,CAACO,cAAjD;;AACAL,IAAAA,aAAa,CAACQ,IAAd,CAAmB,UAACC,GAAD,EAAO;AACtB,UAAGA,GAAH,EAAO,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACPV,MAAAA,QAAQ,CAAC,IAAD,EAAM,qCAAN,CAAR;AACH,KAHD;AAIH,GAND,MAOI;AACAA,IAAAA,QAAQ,CAAC,KAAD,EAAS,sBAAT,CAAR;AACH;AACJ;;AAED,SAASY,eAAT,CAAyBb,MAAzB,EAAgC;AAC5B,MAAIc,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACxC,QAAIC,MAAM,GAAGrB,kBAAkB,CAACsB,IAAnB,CAAwBnB,MAAxB,EAA+B,UAACW,GAAD,EAAKS,cAAL,EAAsB;AAC9D,UAAGT,GAAH,EAAO,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACV,KAFY,CAAb;AAGAK,IAAAA,OAAO,CAACE,MAAD,CAAP;AACH,GALa,CAAd;AAMA,SAAOJ,OAAP;AACH;;AAED,SAASO,MAAT,CAAgBrB,MAAhB,EAAuB;AACnB,MAAIc,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACxC,QAAIC,MAAM,GAAGrB,kBAAkB,CAACsB,IAAnB,CAAwB,EAAxB,EAA2B,UAACR,GAAD,EAAKS,cAAL,EAAsB;AAC1D,UAAGT,GAAH,EAAO,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACV,KAFY,EAEVW,EAFU,CAEPC,MAFO,CAAb;AAGAP,IAAAA,OAAO,CAACE,MAAD,CAAP;AACH,GALa,CAAd;AAMA,SAAOJ,OAAP;AACH;;eACc;AACXf,EAAAA,OAAO,EAAPA,OADW;AAEXsB,EAAAA,MAAM,EAANA,MAFW;AAGXR,EAAAA,eAAe,EAAfA;AAHW,C",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nimport {transferenciaSchemaDb} from \"../Schemas/transferencia.schema\";\r\nimport pessoamodel from \"./pessoa-model\";\r\nimport {configdb} from \"../../../config/config-db\";\r\n\r\nmongoose.connect(configdb.stringConnection, {useNewUrlParser: true});\r\n\r\nlet transferenciaschema = new mongoose.Schema( transferenciaSchemaDb);\r\nlet transferenciaModel = mongoose.model('transferencias',transferenciaschema);\r\n\r\n\r\nfunction inserir(parans,callback) {\r\n    let transferencia = new transferenciaModel(parans);\r\n    let debitou = pessoamodel.debitacoins(parans.doador,parans.qtdcoinstransf);\r\n    if(debitou){\r\n        pessoamodel.creditacoins(parans.recebedor,parans.qtdcoinstransf);\r\n        transferencia.save((err)=>{\r\n            if(err)return handleError(err);\r\n            callback(true,\"Tranferencia realizada com sucesso!\");\r\n        });\r\n    }\r\n    else{\r\n        callback(false , \"Saldo insulficiente!\");\r\n    }\r\n}\r\n\r\nfunction listarEnvolvido(parans){\r\n    let promise = new Promise((resolve,reject)=>{\r\n        let trasnf = transferenciaModel.find(parans,(err,transferencias)=>{\r\n            if(err)return handleError(err);\r\n        });\r\n        resolve(trasnf);\r\n    });\r\n    return promise;\r\n}\r\n\r\nfunction listar(parans){\r\n    let promise = new Promise((resolve,reject)=>{\r\n        let trasnf = transferenciaModel.find({},(err,transferencias)=>{\r\n            if(err)return handleError(err);\r\n        }).or(params);\r\n        resolve(trasnf);\r\n    });\r\n    return promise;\r\n}\r\nexport default {\r\n    inserir,\r\n    listar,\r\n    listarEnvolvido\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128381
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\Schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\Schemas\\\\transferencia.schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\transferencia.schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\transferencia.schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\transferencia.schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
        "sourceFileName": "transferencia.schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transferenciaSchemaDb = exports.transferenciaSchemaValidate = void 0;\nvar transferenciaSchemaValidate = {\n  //   doador : String,\n  //  recebedor : String,\n  // qtdcoinstransf : Number,\n  // motivo : Text\n  \"required\": [\"doador\", \"recebedor\", \"qtdcoinstransf\", \"motivo\"],\n  \"type\": \"object\",\n  \"properties\": {\n    \"doador\": {\n      \"type\": \"string\",\n      \"description\": \" pessoa que doou as moedas\"\n    },\n    \"recebedor\": {\n      \"type\": \"string\",\n      \"description\": \" pessoa que recebeu as moedas\"\n    },\n    \"qtdcoinstransf\": {\n      \"type\": \"number\",\n      \"description\": \"quantidade de moedas que a pessoa pode transferir para outras pessoas\"\n    },\n    \"motivo\": {\n      \"type\": \"string\",\n      \"description\": \"Motivo pelo o qual a pessoa doou as moedas para o outro\"\n    }\n  }\n};\nexports.transferenciaSchemaValidate = transferenciaSchemaValidate;\nvar transferenciaSchemaDb = {\n  \"doador\": Object,\n  \"recebedor\": Object,\n  \"qtdcoinstransf\": Number,\n  \"motivo\": String\n};\nexports.transferenciaSchemaDb = transferenciaSchemaDb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZmVyZW5jaWEuc2NoZW1hLmpzIl0sIm5hbWVzIjpbInRyYW5zZmVyZW5jaWFTY2hlbWFWYWxpZGF0ZSIsInRyYW5zZmVyZW5jaWFTY2hlbWFEYiIsIk9iamVjdCIsIk51bWJlciIsIlN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsMkJBQTJCLEdBQUc7QUFDMUM7QUFDQztBQUNDO0FBQ0E7QUFFQyxjQUFXLENBQUUsUUFBRixFQUFhLFdBQWIsRUFBMkIsZ0JBQTNCLEVBQThDLFFBQTlDLENBTjRCO0FBT3ZDLFVBQVEsUUFQK0I7QUFRdkMsZ0JBQWM7QUFDVixjQUFTO0FBQ0wsY0FBUyxRQURKO0FBRUwscUJBQWdCO0FBRlgsS0FEQztBQUtWLGlCQUFZO0FBQ1IsY0FBUyxRQUREO0FBRVIscUJBQWdCO0FBRlIsS0FMRjtBQVNWLHNCQUFpQjtBQUNiLGNBQVMsUUFESTtBQUViLHFCQUFnQjtBQUZILEtBVFA7QUFjVixjQUFTO0FBQ0wsY0FBUyxRQURKO0FBRUwscUJBQWdCO0FBRlg7QUFkQztBQVJ5QixDQUFwQzs7QUE2QkEsSUFBTUMscUJBQXFCLEdBQUc7QUFDakMsWUFBVUMsTUFEdUI7QUFFakMsZUFBYUEsTUFGb0I7QUFHakMsb0JBQWtCQyxNQUhlO0FBSWpDLFlBQVVDO0FBSnVCLENBQTlCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxTY2hlbWFzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHRyYW5zZmVyZW5jaWFTY2hlbWFWYWxpZGF0ZSA9IHtcclxuIC8vICAgZG9hZG9yIDogU3RyaW5nLFxyXG4gIC8vICByZWNlYmVkb3IgOiBTdHJpbmcsXHJcbiAgIC8vIHF0ZGNvaW5zdHJhbnNmIDogTnVtYmVyLFxyXG4gICAvLyBtb3Rpdm8gOiBUZXh0XHJcblxyXG4gICAgXCJyZXF1aXJlZFwiOlsgXCJkb2Fkb3JcIiAsIFwicmVjZWJlZG9yXCIgLCBcInF0ZGNvaW5zdHJhbnNmXCIgLCBcIm1vdGl2b1wiXSxcclxuICAgIFwidHlwZVwiOiBcIm9iamVjdFwiLFxyXG4gICAgXCJwcm9wZXJ0aWVzXCI6IHtcclxuICAgICAgICBcImRvYWRvclwiOntcclxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcInN0cmluZ1wiLFxyXG4gICAgICAgICAgICBcImRlc2NyaXB0aW9uXCIgOiBcIiBwZXNzb2EgcXVlIGRvb3UgYXMgbW9lZGFzXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIFwicmVjZWJlZG9yXCI6e1xyXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCIsXHJcbiAgICAgICAgICAgIFwiZGVzY3JpcHRpb25cIiA6IFwiIHBlc3NvYSBxdWUgcmVjZWJldSBhcyBtb2VkYXNcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXCJxdGRjb2luc3RyYW5zZlwiOntcclxuICAgICAgICAgICAgXCJ0eXBlXCIgOiBcIm51bWJlclwiLFxyXG4gICAgICAgICAgICBcImRlc2NyaXB0aW9uXCIgOiBcInF1YW50aWRhZGUgZGUgbW9lZGFzIHF1ZSBhIHBlc3NvYSBwb2RlIHRyYW5zZmVyaXIgcGFyYSBvdXRyYXMgcGVzc29hc1wiLFxyXG5cclxuICAgICAgICB9LFxyXG4gICAgICAgIFwibW90aXZvXCI6e1xyXG4gICAgICAgICAgICBcInR5cGVcIiA6IFwic3RyaW5nXCIsXHJcbiAgICAgICAgICAgIFwiZGVzY3JpcHRpb25cIiA6IFwiTW90aXZvIHBlbG8gbyBxdWFsIGEgcGVzc29hIGRvb3UgYXMgbW9lZGFzIHBhcmEgbyBvdXRyb1wiXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHRyYW5zZmVyZW5jaWFTY2hlbWFEYiA9IHtcclxuICAgIFwiZG9hZG9yXCI6IE9iamVjdCAsXHJcbiAgICBcInJlY2ViZWRvclwiOiBPYmplY3QgICxcclxuICAgIFwicXRkY29pbnN0cmFuc2ZcIjogTnVtYmVyLFxyXG4gICAgXCJtb3Rpdm9cIjogU3RyaW5nXHJcbn07XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "transferencia.schema.js"
      ],
      "names": [
        "transferenciaSchemaValidate",
        "transferenciaSchemaDb",
        "Object",
        "Number",
        "String"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,2BAA2B,GAAG;AAC1C;AACC;AACC;AACA;AAEC,cAAW,CAAE,QAAF,EAAa,WAAb,EAA2B,gBAA3B,EAA8C,QAA9C,CAN4B;AAOvC,UAAQ,QAP+B;AAQvC,gBAAc;AACV,cAAS;AACL,cAAS,QADJ;AAEL,qBAAgB;AAFX,KADC;AAKV,iBAAY;AACR,cAAS,QADD;AAER,qBAAgB;AAFR,KALF;AASV,sBAAiB;AACb,cAAS,QADI;AAEb,qBAAgB;AAFH,KATP;AAcV,cAAS;AACL,cAAS,QADJ;AAEL,qBAAgB;AAFX;AAdC;AARyB,CAApC;;AA6BA,IAAMC,qBAAqB,GAAG;AACjC,YAAUC,MADuB;AAEjC,eAAaA,MAFoB;AAGjC,oBAAkBC,MAHe;AAIjC,YAAUC;AAJuB,CAA9B",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
      "sourcesContent": [
        "export const transferenciaSchemaValidate = {\r\n //   doador : String,\r\n  //  recebedor : String,\r\n   // qtdcoinstransf : Number,\r\n   // motivo : Text\r\n\r\n    \"required\":[ \"doador\" , \"recebedor\" , \"qtdcoinstransf\" , \"motivo\"],\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"doador\":{\r\n            \"type\" : \"string\",\r\n            \"description\" : \" pessoa que doou as moedas\"\r\n        },\r\n        \"recebedor\":{\r\n            \"type\" : \"string\",\r\n            \"description\" : \" pessoa que recebeu as moedas\"\r\n        },\r\n        \"qtdcoinstransf\":{\r\n            \"type\" : \"number\",\r\n            \"description\" : \"quantidade de moedas que a pessoa pode transferir para outras pessoas\",\r\n\r\n        },\r\n        \"motivo\":{\r\n            \"type\" : \"string\",\r\n            \"description\" : \"Motivo pelo o qual a pessoa doou as moedas para o outro\"\r\n        }\r\n    }\r\n};\r\n\r\nexport const transferenciaSchemaDb = {\r\n    \"doador\": Object ,\r\n    \"recebedor\": Object  ,\r\n    \"qtdcoinstransf\": Number,\r\n    \"motivo\": String\r\n};\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128377
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\paths\\\\recompensa-router.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\recompensa-router.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\recompensa-router.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths\\recompensa-router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
        "sourceFileName": "recompensa-router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsonschema = require(\"jsonschema\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _recompensaModel = _interopRequireDefault(require(\"../models/recompensa-model\"));\n\nvar _recompensa = require(\"../Schemas/recompensa.schema\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar recompensaRouter = _express[\"default\"].Router();\n\nrecompensaRouter.use((0, _cors[\"default\"])());\nrecompensaRouter.post(\"/\", function (req, resp, next) {\n  var verificaobj = (0, _jsonschema.validate)(req.body, _recompensa.recompensaSchemaValidate);\n\n  if (verificaobj.errors.length > 0) {\n    resp.status(400).json({\n      'message': \"Bad request \" + verificaobj.errors[0].message\n    });\n  } else {\n    _recompensaModel[\"default\"].inserir(req.body, function (message) {\n      resp.status(201).json({\n        'message': message\n      });\n    });\n  }\n});\nrecompensaRouter.get(\"/\", function (req, resp, next) {\n  _recompensaModel[\"default\"].listar({}, function (erro, data) {\n    if (erro) resp.status(500).send(erro.message);else if (data.length > 0) resp.json(data);else resp.status(404).json({\n      'message': 'nenhum registro encontrado'\n    });\n  });\n});\nrecompensaRouter.put(\"/\", function (req, resp, next) {\n  var verificaobj = (0, _jsonschema.validate)(req.body, _recompensa.recompensaSchemaValidate);\n\n  if (verificaobj.errors.length > 0) {\n    resp.status(400).json({\n      'message': \"Bad request \" + verificaobj.errors[0].message\n    });\n  } else {\n    _recompensaModel[\"default\"].atualizar(req.body, function (message) {\n      resp.status(201).json({\n        'message': message\n      });\n    });\n  }\n});\nrecompensaRouter[\"delete\"](\"/\", function (req, resp, next) {\n  _recompensaModel[\"default\"].deletar(req.body);\n});\nvar _default = recompensaRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY29tcGVuc2Etcm91dGVyLmpzIl0sIm5hbWVzIjpbInJlY29tcGVuc2FSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwidXNlIiwicG9zdCIsInJlcSIsInJlc3AiLCJuZXh0IiwidmVyaWZpY2FvYmoiLCJib2R5IiwicmVjb21wZW5zYVNjaGVtYVZhbGlkYXRlIiwiZXJyb3JzIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJyZWNvbXBlbnNhTW9kZWwiLCJpbnNlcmlyIiwiZ2V0IiwibGlzdGFyIiwiZXJybyIsImRhdGEiLCJzZW5kIiwicHV0IiwiYXR1YWxpemFyIiwiZGVsZXRhciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRUEsSUFBTUEsZ0JBQWdCLEdBQUdDLG9CQUFRQyxNQUFSLEVBQXpCOztBQUVBRixnQkFBZ0IsQ0FBQ0csR0FBakIsQ0FBcUIsdUJBQXJCO0FBRUFILGdCQUFnQixDQUFDSSxJQUFqQixDQUFzQixHQUF0QixFQUEyQixVQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBWUMsSUFBWixFQUFtQjtBQUMxQyxNQUFJQyxXQUFXLEdBQUcsMEJBQVNILEdBQUcsQ0FBQ0ksSUFBYixFQUFrQkMsb0NBQWxCLENBQWxCOztBQUVBLE1BQUdGLFdBQVcsQ0FBQ0csTUFBWixDQUFtQkMsTUFBbkIsR0FBNEIsQ0FBL0IsRUFBaUM7QUFDN0JOLElBQUFBLElBQUksQ0FBQ08sTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXVCO0FBQUMsaUJBQVUsaUJBQWlCTixXQUFXLENBQUNHLE1BQVosQ0FBbUIsQ0FBbkIsRUFBc0JJO0FBQWxELEtBQXZCO0FBQ0gsR0FGRCxNQUdLO0FBQ0RDLGdDQUFnQkMsT0FBaEIsQ0FBd0JaLEdBQUcsQ0FBQ0ksSUFBNUIsRUFBa0MsVUFBQ00sT0FBRCxFQUFhO0FBQzNDVCxNQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUFzQjtBQUFDLG1CQUFXQztBQUFaLE9BQXRCO0FBQ0gsS0FGRDtBQUdIO0FBQ0osQ0FYRDtBQWFBZixnQkFBZ0IsQ0FBQ2tCLEdBQWpCLENBQXFCLEdBQXJCLEVBQXlCLFVBQUNiLEdBQUQsRUFBS0MsSUFBTCxFQUFVQyxJQUFWLEVBQWlCO0FBQ3RDUyw4QkFBZ0JHLE1BQWhCLENBQXVCLEVBQXZCLEVBQTBCLFVBQUNDLElBQUQsRUFBTUMsSUFBTixFQUFhO0FBQ25DLFFBQUdELElBQUgsRUFDSWQsSUFBSSxDQUFDTyxNQUFMLENBQVksR0FBWixFQUFpQlMsSUFBakIsQ0FBc0JGLElBQUksQ0FBQ0wsT0FBM0IsRUFESixLQUdBLElBQUdNLElBQUksQ0FBQ1QsTUFBTCxHQUFjLENBQWpCLEVBQ0lOLElBQUksQ0FBQ1EsSUFBTCxDQUFVTyxJQUFWLEVBREosS0FHSWYsSUFBSSxDQUFDTyxNQUFMLENBQVksR0FBWixFQUFpQkMsSUFBakIsQ0FBc0I7QUFBQyxpQkFBVztBQUFaLEtBQXRCO0FBQ1AsR0FSRDtBQVNILENBVkQ7QUFZQWQsZ0JBQWdCLENBQUN1QixHQUFqQixDQUFxQixHQUFyQixFQUEwQixVQUFDbEIsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLElBQVosRUFBbUI7QUFDekMsTUFBSUMsV0FBVyxHQUFHLDBCQUFTSCxHQUFHLENBQUNJLElBQWIsRUFBa0JDLG9DQUFsQixDQUFsQjs7QUFFQSxNQUFHRixXQUFXLENBQUNHLE1BQVosQ0FBbUJDLE1BQW5CLEdBQTRCLENBQS9CLEVBQWlDO0FBQzdCTixJQUFBQSxJQUFJLENBQUNPLE1BQUwsQ0FBWSxHQUFaLEVBQWlCQyxJQUFqQixDQUF1QjtBQUFDLGlCQUFVLGlCQUFpQk4sV0FBVyxDQUFDRyxNQUFaLENBQW1CLENBQW5CLEVBQXNCSTtBQUFsRCxLQUF2QjtBQUNILEdBRkQsTUFHSztBQUNEQyxnQ0FBZ0JRLFNBQWhCLENBQTBCbkIsR0FBRyxDQUFDSSxJQUE5QixFQUFvQyxVQUFDTSxPQUFELEVBQWE7QUFDN0NULE1BQUFBLElBQUksQ0FBQ08sTUFBTCxDQUFZLEdBQVosRUFBaUJDLElBQWpCLENBQXNCO0FBQUMsbUJBQVdDO0FBQVosT0FBdEI7QUFDSCxLQUZEO0FBR0g7QUFDSixDQVhEO0FBYUFmLGdCQUFnQixVQUFoQixDQUF3QixHQUF4QixFQUE0QixVQUFDSyxHQUFELEVBQU1DLElBQU4sRUFBWUMsSUFBWixFQUFtQjtBQUMzQ1MsOEJBQWdCUyxPQUFoQixDQUF3QnBCLEdBQUcsQ0FBQ0ksSUFBNUI7QUFDSCxDQUZEO2VBS2VULGdCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxwYXRocyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7dmFsaWRhdGV9IGZyb20gXCJqc29uc2NoZW1hXCI7XHJcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XHJcblxyXG5pbXBvcnQgcmVjb21wZW5zYU1vZGVsIGZyb20gXCIuLi9tb2RlbHMvcmVjb21wZW5zYS1tb2RlbFwiO1xyXG5pbXBvcnQge3JlY29tcGVuc2FTY2hlbWFWYWxpZGF0ZX0gZnJvbSBcIi4uL1NjaGVtYXMvcmVjb21wZW5zYS5zY2hlbWFcIjtcclxuXHJcbmNvbnN0IHJlY29tcGVuc2FSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxucmVjb21wZW5zYVJvdXRlci51c2UoY29ycygpKTtcclxuXHJcbnJlY29tcGVuc2FSb3V0ZXIucG9zdChcIi9cIiAsKHJlcSwgcmVzcCwgbmV4dCk9PntcclxuICAgIGxldCB2ZXJpZmljYW9iaiA9IHZhbGlkYXRlKHJlcS5ib2R5LHJlY29tcGVuc2FTY2hlbWFWYWxpZGF0ZSk7XHJcblxyXG4gICAgaWYodmVyaWZpY2FvYmouZXJyb3JzLmxlbmd0aCA+IDApe1xyXG4gICAgICAgIHJlc3Auc3RhdHVzKDQwMCkuanNvbiggeydtZXNzYWdlJzpcIkJhZCByZXF1ZXN0IFwiICsgdmVyaWZpY2FvYmouZXJyb3JzWzBdLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZWNvbXBlbnNhTW9kZWwuaW5zZXJpcihyZXEuYm9keSwgKG1lc3NhZ2UpID0+IHtcclxuICAgICAgICAgICAgcmVzcC5zdGF0dXMoMjAxKS5qc29uKHsnbWVzc2FnZSc6IG1lc3NhZ2V9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSk7XHJcblxyXG5yZWNvbXBlbnNhUm91dGVyLmdldChcIi9cIiwocmVxLHJlc3AsbmV4dCk9PntcclxuICAgIHJlY29tcGVuc2FNb2RlbC5saXN0YXIoe30sKGVycm8sZGF0YSk9PntcclxuICAgICAgICBpZihlcnJvKVxyXG4gICAgICAgICAgICByZXNwLnN0YXR1cyg1MDApLnNlbmQoZXJyby5tZXNzYWdlKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgaWYoZGF0YS5sZW5ndGggPiAwIClcclxuICAgICAgICAgICAgcmVzcC5qc29uKGRhdGEpO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgcmVzcC5zdGF0dXMoNDA0KS5qc29uKHsnbWVzc2FnZSc6ICduZW5odW0gcmVnaXN0cm8gZW5jb250cmFkbyd9KTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbnJlY29tcGVuc2FSb3V0ZXIucHV0KFwiL1wiICwocmVxLCByZXNwLCBuZXh0KT0+e1xyXG4gICAgbGV0IHZlcmlmaWNhb2JqID0gdmFsaWRhdGUocmVxLmJvZHkscmVjb21wZW5zYVNjaGVtYVZhbGlkYXRlKTtcclxuXHJcbiAgICBpZih2ZXJpZmljYW9iai5lcnJvcnMubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgcmVzcC5zdGF0dXMoNDAwKS5qc29uKCB7J21lc3NhZ2UnOlwiQmFkIHJlcXVlc3QgXCIgKyB2ZXJpZmljYW9iai5lcnJvcnNbMF0ubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJlY29tcGVuc2FNb2RlbC5hdHVhbGl6YXIocmVxLmJvZHksIChtZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgICAgIHJlc3Auc3RhdHVzKDIwMSkuanNvbih7J21lc3NhZ2UnOiBtZXNzYWdlfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxucmVjb21wZW5zYVJvdXRlci5kZWxldGUoXCIvXCIsKHJlcSwgcmVzcCwgbmV4dCk9PntcclxuICAgIHJlY29tcGVuc2FNb2RlbC5kZWxldGFyKHJlcS5ib2R5KTtcclxufSk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcmVjb21wZW5zYVJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "recompensa-router.js"
      ],
      "names": [
        "recompensaRouter",
        "express",
        "Router",
        "use",
        "post",
        "req",
        "resp",
        "next",
        "verificaobj",
        "body",
        "recompensaSchemaValidate",
        "errors",
        "length",
        "status",
        "json",
        "message",
        "recompensaModel",
        "inserir",
        "get",
        "listar",
        "erro",
        "data",
        "send",
        "put",
        "atualizar",
        "deletar"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAGC,oBAAQC,MAAR,EAAzB;;AAEAF,gBAAgB,CAACG,GAAjB,CAAqB,uBAArB;AAEAH,gBAAgB,CAACI,IAAjB,CAAsB,GAAtB,EAA2B,UAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAmB;AAC1C,MAAIC,WAAW,GAAG,0BAASH,GAAG,CAACI,IAAb,EAAkBC,oCAAlB,CAAlB;;AAEA,MAAGF,WAAW,CAACG,MAAZ,CAAmBC,MAAnB,GAA4B,CAA/B,EAAiC;AAC7BN,IAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAuB;AAAC,iBAAU,iBAAiBN,WAAW,CAACG,MAAZ,CAAmB,CAAnB,EAAsBI;AAAlD,KAAvB;AACH,GAFD,MAGK;AACDC,gCAAgBC,OAAhB,CAAwBZ,GAAG,CAACI,IAA5B,EAAkC,UAACM,OAAD,EAAa;AAC3CT,MAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,mBAAWC;AAAZ,OAAtB;AACH,KAFD;AAGH;AACJ,CAXD;AAaAf,gBAAgB,CAACkB,GAAjB,CAAqB,GAArB,EAAyB,UAACb,GAAD,EAAKC,IAAL,EAAUC,IAAV,EAAiB;AACtCS,8BAAgBG,MAAhB,CAAuB,EAAvB,EAA0B,UAACC,IAAD,EAAMC,IAAN,EAAa;AACnC,QAAGD,IAAH,EACId,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBS,IAAjB,CAAsBF,IAAI,CAACL,OAA3B,EADJ,KAGA,IAAGM,IAAI,CAACT,MAAL,GAAc,CAAjB,EACIN,IAAI,CAACQ,IAAL,CAAUO,IAAV,EADJ,KAGIf,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,iBAAW;AAAZ,KAAtB;AACP,GARD;AASH,CAVD;AAYAd,gBAAgB,CAACuB,GAAjB,CAAqB,GAArB,EAA0B,UAAClB,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAmB;AACzC,MAAIC,WAAW,GAAG,0BAASH,GAAG,CAACI,IAAb,EAAkBC,oCAAlB,CAAlB;;AAEA,MAAGF,WAAW,CAACG,MAAZ,CAAmBC,MAAnB,GAA4B,CAA/B,EAAiC;AAC7BN,IAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAuB;AAAC,iBAAU,iBAAiBN,WAAW,CAACG,MAAZ,CAAmB,CAAnB,EAAsBI;AAAlD,KAAvB;AACH,GAFD,MAGK;AACDC,gCAAgBQ,SAAhB,CAA0BnB,GAAG,CAACI,IAA9B,EAAoC,UAACM,OAAD,EAAa;AAC7CT,MAAAA,IAAI,CAACO,MAAL,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB;AAAC,mBAAWC;AAAZ,OAAtB;AACH,KAFD;AAGH;AACJ,CAXD;AAaAf,gBAAgB,UAAhB,CAAwB,GAAxB,EAA4B,UAACK,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAmB;AAC3CS,8BAAgBS,OAAhB,CAAwBpB,GAAG,CAACI,IAA5B;AACH,CAFD;eAKeT,gB",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\paths",
      "sourcesContent": [
        "import express from \"express\";\r\nimport {validate} from \"jsonschema\";\r\nimport cors from \"cors\";\r\n\r\nimport recompensaModel from \"../models/recompensa-model\";\r\nimport {recompensaSchemaValidate} from \"../Schemas/recompensa.schema\";\r\n\r\nconst recompensaRouter = express.Router();\r\n\r\nrecompensaRouter.use(cors());\r\n\r\nrecompensaRouter.post(\"/\" ,(req, resp, next)=>{\r\n    let verificaobj = validate(req.body,recompensaSchemaValidate);\r\n\r\n    if(verificaobj.errors.length > 0){\r\n        resp.status(400).json( {'message':\"Bad request \" + verificaobj.errors[0].message });\r\n    }\r\n    else {\r\n        recompensaModel.inserir(req.body, (message) => {\r\n            resp.status(201).json({'message': message});\r\n        });\r\n    }\r\n});\r\n\r\nrecompensaRouter.get(\"/\",(req,resp,next)=>{\r\n    recompensaModel.listar({},(erro,data)=>{\r\n        if(erro)\r\n            resp.status(500).send(erro.message);\r\n        else\r\n        if(data.length > 0 )\r\n            resp.json(data);\r\n        else\r\n            resp.status(404).json({'message': 'nenhum registro encontrado'});\r\n    });\r\n});\r\n\r\nrecompensaRouter.put(\"/\" ,(req, resp, next)=>{\r\n    let verificaobj = validate(req.body,recompensaSchemaValidate);\r\n\r\n    if(verificaobj.errors.length > 0){\r\n        resp.status(400).json( {'message':\"Bad request \" + verificaobj.errors[0].message });\r\n    }\r\n    else {\r\n        recompensaModel.atualizar(req.body, (message) => {\r\n            resp.status(201).json({'message': message});\r\n        });\r\n    }\r\n});\r\n\r\nrecompensaRouter.delete(\"/\",(req, resp, next)=>{\r\n    recompensaModel.deletar(req.body);\r\n});\r\n\r\n\r\nexport default recompensaRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128384
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\models\\\\recompensa-model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\recompensa-model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\recompensa-model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models\\recompensa-model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
        "sourceFileName": "recompensa-model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _recompensa = require(\"../Schemas/recompensa.schema\");\n\nvar _configDb = require(\"../../../config/config-db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].connect(_configDb.configdb.stringConnection, {\n  useNewUrlParser: true\n});\n\nvar schema = new _mongoose[\"default\"].Schema(_recompensa.recompensaSchemaDb);\n\nvar recompensaModel = _mongoose[\"default\"].model('recompensa', schema);\n\nfunction inserir(parans, callback) {\n  var recompensa = new recompensaModel(parans);\n  recompensa.save(function (err) {\n    if (err) return handleError(err);\n    var message = \"recompensa salva com sucesso!\";\n    callback(message);\n  });\n}\n\nfunction deletar(obj) {\n  recompensaModel.deleteOne(obj, function (err) {\n    if (err) return handleError(err);\n    console.log(\"recompensa deletada com sucesso!\");\n  });\n}\n\nfunction listar(parans, callback) {\n  recompensaModel.find(parans, function (err, recompensas) {\n    if (err) return handleError(err);\n    callback(err, recompensas);\n  });\n}\n\nfunction atualizar(obj) {\n  recompensaModel.find({\n    _id: obj._id\n  }, obj, function (err, data) {\n    if (err) return hadleError(err);\n  });\n}\n\nvar _default = {\n  inserir: inserir,\n  atualizar: atualizar,\n  deletar: deletar,\n  listar: listar\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY29tcGVuc2EtbW9kZWwuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjb25uZWN0IiwiY29uZmlnZGIiLCJzdHJpbmdDb25uZWN0aW9uIiwidXNlTmV3VXJsUGFyc2VyIiwic2NoZW1hIiwiU2NoZW1hIiwicmVjb21wZW5zYVNjaGVtYURiIiwicmVjb21wZW5zYU1vZGVsIiwibW9kZWwiLCJpbnNlcmlyIiwicGFyYW5zIiwiY2FsbGJhY2siLCJyZWNvbXBlbnNhIiwic2F2ZSIsImVyciIsImhhbmRsZUVycm9yIiwibWVzc2FnZSIsImRlbGV0YXIiLCJvYmoiLCJkZWxldGVPbmUiLCJjb25zb2xlIiwibG9nIiwibGlzdGFyIiwiZmluZCIsInJlY29tcGVuc2FzIiwiYXR1YWxpemFyIiwiX2lkIiwiZGF0YSIsImhhZGxlRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBQSxxQkFBU0MsT0FBVCxDQUFpQkMsbUJBQVNDLGdCQUExQixFQUE0QztBQUFDQyxFQUFBQSxlQUFlLEVBQUU7QUFBbEIsQ0FBNUM7O0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlMLHFCQUFTTSxNQUFiLENBQW9CQyw4QkFBcEIsQ0FBYjs7QUFFQSxJQUFJQyxlQUFlLEdBQUdSLHFCQUFTUyxLQUFULENBQWUsWUFBZixFQUE0QkosTUFBNUIsQ0FBdEI7O0FBR0EsU0FBU0ssT0FBVCxDQUFpQkMsTUFBakIsRUFBd0JDLFFBQXhCLEVBQWtDO0FBQzlCLE1BQUlDLFVBQVUsR0FBRyxJQUFJTCxlQUFKLENBQW9CRyxNQUFwQixDQUFqQjtBQUNBRSxFQUFBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0IsVUFBQ0MsR0FBRCxFQUFPO0FBQ25CLFFBQUdBLEdBQUgsRUFBTyxPQUFPQyxXQUFXLENBQUNELEdBQUQsQ0FBbEI7QUFDUCxRQUFJRSxPQUFPLEdBQUcsK0JBQWQ7QUFDQUwsSUFBQUEsUUFBUSxDQUFDSyxPQUFELENBQVI7QUFDSCxHQUpEO0FBS0g7O0FBRUQsU0FBU0MsT0FBVCxDQUFpQkMsR0FBakIsRUFBcUI7QUFDakJYLEVBQUFBLGVBQWUsQ0FBQ1ksU0FBaEIsQ0FBMEJELEdBQTFCLEVBQThCLFVBQUNKLEdBQUQsRUFBTztBQUNqQyxRQUFHQSxHQUFILEVBQU8sT0FBT0MsV0FBVyxDQUFDRCxHQUFELENBQWxCO0FBQ1BNLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0gsR0FIRDtBQUlIOztBQUNELFNBQVNDLE1BQVQsQ0FBZ0JaLE1BQWhCLEVBQXdCQyxRQUF4QixFQUFpQztBQUM3QkosRUFBQUEsZUFBZSxDQUFDZ0IsSUFBaEIsQ0FBcUJiLE1BQXJCLEVBQTRCLFVBQUNJLEdBQUQsRUFBS1UsV0FBTCxFQUFtQjtBQUMzQyxRQUFHVixHQUFILEVBQU8sT0FBT0MsV0FBVyxDQUFDRCxHQUFELENBQWxCO0FBQ1BILElBQUFBLFFBQVEsQ0FBQ0csR0FBRCxFQUFLVSxXQUFMLENBQVI7QUFDSCxHQUhEO0FBSUg7O0FBRUQsU0FBU0MsU0FBVCxDQUFtQlAsR0FBbkIsRUFBdUI7QUFDbkJYLEVBQUFBLGVBQWUsQ0FBQ2dCLElBQWhCLENBQXNCO0FBQUNHLElBQUFBLEdBQUcsRUFBR1IsR0FBRyxDQUFDUTtBQUFYLEdBQXRCLEVBQXdDUixHQUF4QyxFQUE4QyxVQUFDSixHQUFELEVBQUthLElBQUwsRUFBWTtBQUN0RCxRQUFHYixHQUFILEVBQVEsT0FBT2MsVUFBVSxDQUFDZCxHQUFELENBQWpCO0FBQ1gsR0FGRDtBQUdIOztlQUVjO0FBQ1hMLEVBQUFBLE9BQU8sRUFBUEEsT0FEVztBQUVYZ0IsRUFBQUEsU0FBUyxFQUFUQSxTQUZXO0FBR1hSLEVBQUFBLE9BQU8sRUFBUEEsT0FIVztBQUlYSyxFQUFBQSxNQUFNLEVBQU5BO0FBSlcsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERlbGxcXFJlcG9zXFxhcGktbWVyaXRpLW1vbmV5XFxzcmNcXGFwaS12MVxcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xyXG5pbXBvcnQge3JlY29tcGVuc2FTY2hlbWFEYiB9IGZyb20gXCIuLi9TY2hlbWFzL3JlY29tcGVuc2Euc2NoZW1hXCI7XHJcbmltcG9ydCB7Y29uZmlnZGJ9IGZyb20gXCIuLi8uLi8uLi9jb25maWcvY29uZmlnLWRiXCI7XHJcblxyXG5tb25nb29zZS5jb25uZWN0KGNvbmZpZ2RiLnN0cmluZ0Nvbm5lY3Rpb24sIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcclxuXHJcbmxldCBzY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHJlY29tcGVuc2FTY2hlbWFEYik7XHJcblxyXG5sZXQgcmVjb21wZW5zYU1vZGVsID0gbW9uZ29vc2UubW9kZWwoJ3JlY29tcGVuc2EnLHNjaGVtYSk7XHJcblxyXG5cclxuZnVuY3Rpb24gaW5zZXJpcihwYXJhbnMsY2FsbGJhY2spIHtcclxuICAgIGxldCByZWNvbXBlbnNhID0gbmV3IHJlY29tcGVuc2FNb2RlbChwYXJhbnMpO1xyXG4gICAgcmVjb21wZW5zYS5zYXZlKChlcnIpPT57XHJcbiAgICAgICAgaWYoZXJyKXJldHVybiBoYW5kbGVFcnJvcihlcnIpO1xyXG4gICAgICAgIGxldCBtZXNzYWdlID0gXCJyZWNvbXBlbnNhIHNhbHZhIGNvbSBzdWNlc3NvIVwiO1xyXG4gICAgICAgIGNhbGxiYWNrKG1lc3NhZ2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlbGV0YXIob2JqKXtcclxuICAgIHJlY29tcGVuc2FNb2RlbC5kZWxldGVPbmUob2JqLChlcnIpPT57XHJcbiAgICAgICAgaWYoZXJyKXJldHVybiBoYW5kbGVFcnJvcihlcnIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicmVjb21wZW5zYSBkZWxldGFkYSBjb20gc3VjZXNzbyFcIik7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBsaXN0YXIocGFyYW5zLCBjYWxsYmFjayl7XHJcbiAgICByZWNvbXBlbnNhTW9kZWwuZmluZChwYXJhbnMsKGVycixyZWNvbXBlbnNhcyk9PntcclxuICAgICAgICBpZihlcnIpcmV0dXJuIGhhbmRsZUVycm9yKGVycik7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyLHJlY29tcGVuc2FzKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhdHVhbGl6YXIob2JqKXtcclxuICAgIHJlY29tcGVuc2FNb2RlbC5maW5kKCB7X2lkIDogb2JqLl9pZCB9LCBvYmogLCAoZXJyLGRhdGEpPT57XHJcbiAgICAgICAgaWYoZXJyKSByZXR1cm4gaGFkbGVFcnJvcihlcnIpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGluc2VyaXIsXHJcbiAgICBhdHVhbGl6YXIsXHJcbiAgICBkZWxldGFyLFxyXG4gICAgbGlzdGFyLFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "recompensa-model.js"
      ],
      "names": [
        "mongoose",
        "connect",
        "configdb",
        "stringConnection",
        "useNewUrlParser",
        "schema",
        "Schema",
        "recompensaSchemaDb",
        "recompensaModel",
        "model",
        "inserir",
        "parans",
        "callback",
        "recompensa",
        "save",
        "err",
        "handleError",
        "message",
        "deletar",
        "obj",
        "deleteOne",
        "console",
        "log",
        "listar",
        "find",
        "recompensas",
        "atualizar",
        "_id",
        "data",
        "hadleError"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,qBAASC,OAAT,CAAiBC,mBAASC,gBAA1B,EAA4C;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAA5C;;AAEA,IAAIC,MAAM,GAAG,IAAIL,qBAASM,MAAb,CAAoBC,8BAApB,CAAb;;AAEA,IAAIC,eAAe,GAAGR,qBAASS,KAAT,CAAe,YAAf,EAA4BJ,MAA5B,CAAtB;;AAGA,SAASK,OAAT,CAAiBC,MAAjB,EAAwBC,QAAxB,EAAkC;AAC9B,MAAIC,UAAU,GAAG,IAAIL,eAAJ,CAAoBG,MAApB,CAAjB;AACAE,EAAAA,UAAU,CAACC,IAAX,CAAgB,UAACC,GAAD,EAAO;AACnB,QAAGA,GAAH,EAAO,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACP,QAAIE,OAAO,GAAG,+BAAd;AACAL,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACH,GAJD;AAKH;;AAED,SAASC,OAAT,CAAiBC,GAAjB,EAAqB;AACjBX,EAAAA,eAAe,CAACY,SAAhB,CAA0BD,GAA1B,EAA8B,UAACJ,GAAD,EAAO;AACjC,QAAGA,GAAH,EAAO,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACPM,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH,GAHD;AAIH;;AACD,SAASC,MAAT,CAAgBZ,MAAhB,EAAwBC,QAAxB,EAAiC;AAC7BJ,EAAAA,eAAe,CAACgB,IAAhB,CAAqBb,MAArB,EAA4B,UAACI,GAAD,EAAKU,WAAL,EAAmB;AAC3C,QAAGV,GAAH,EAAO,OAAOC,WAAW,CAACD,GAAD,CAAlB;AACPH,IAAAA,QAAQ,CAACG,GAAD,EAAKU,WAAL,CAAR;AACH,GAHD;AAIH;;AAED,SAASC,SAAT,CAAmBP,GAAnB,EAAuB;AACnBX,EAAAA,eAAe,CAACgB,IAAhB,CAAsB;AAACG,IAAAA,GAAG,EAAGR,GAAG,CAACQ;AAAX,GAAtB,EAAwCR,GAAxC,EAA8C,UAACJ,GAAD,EAAKa,IAAL,EAAY;AACtD,QAAGb,GAAH,EAAQ,OAAOc,UAAU,CAACd,GAAD,CAAjB;AACX,GAFD;AAGH;;eAEc;AACXL,EAAAA,OAAO,EAAPA,OADW;AAEXgB,EAAAA,SAAS,EAATA,SAFW;AAGXR,EAAAA,OAAO,EAAPA,OAHW;AAIXK,EAAAA,MAAM,EAANA;AAJW,C",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nimport {recompensaSchemaDb } from \"../Schemas/recompensa.schema\";\r\nimport {configdb} from \"../../../config/config-db\";\r\n\r\nmongoose.connect(configdb.stringConnection, {useNewUrlParser: true});\r\n\r\nlet schema = new mongoose.Schema(recompensaSchemaDb);\r\n\r\nlet recompensaModel = mongoose.model('recompensa',schema);\r\n\r\n\r\nfunction inserir(parans,callback) {\r\n    let recompensa = new recompensaModel(parans);\r\n    recompensa.save((err)=>{\r\n        if(err)return handleError(err);\r\n        let message = \"recompensa salva com sucesso!\";\r\n        callback(message);\r\n    });\r\n}\r\n\r\nfunction deletar(obj){\r\n    recompensaModel.deleteOne(obj,(err)=>{\r\n        if(err)return handleError(err);\r\n        console.log(\"recompensa deletada com sucesso!\");\r\n    });\r\n}\r\nfunction listar(parans, callback){\r\n    recompensaModel.find(parans,(err,recompensas)=>{\r\n        if(err)return handleError(err);\r\n        callback(err,recompensas);\r\n    });\r\n}\r\n\r\nfunction atualizar(obj){\r\n    recompensaModel.find( {_id : obj._id }, obj , (err,data)=>{\r\n        if(err) return hadleError(err);\r\n    });\r\n}\r\n\r\nexport default {\r\n    inserir,\r\n    atualizar,\r\n    deletar,\r\n    listar,\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128380
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\Schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"filename\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\\\\src\\\\api-v1\\\\Schemas\\\\recompensa.schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Dell\\\\Repos\\\\api-meriti-money\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\recompensa.schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Dell\\Repos\\api-meriti-money",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\recompensa.schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas\\recompensa.schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
        "sourceFileName": "recompensa.schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recompensaSchemaDb = exports.recompensaSchemaValidate = void 0;\nvar recompensaSchemaValidate = {\n  \"required\": [\"descri\", \"price\"],\n  \"type\": \"object\",\n  \"properties\": {\n    \"descri\": {\n      \"type\": \"string\",\n      \"description\": \"descrição ada recompesa a ser resgatada com moedas\"\n    },\n    \"price\": {\n      \"type\": \"number\",\n      \"description\": \"quantidade de moedas necessarias para resgatar a recompensa\"\n    }\n  }\n};\nexports.recompensaSchemaValidate = recompensaSchemaValidate;\nvar recompensaSchemaDb = {\n  descri: String,\n  price: Number\n};\nexports.recompensaSchemaDb = recompensaSchemaDb;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY29tcGVuc2Euc2NoZW1hLmpzIl0sIm5hbWVzIjpbInJlY29tcGVuc2FTY2hlbWFWYWxpZGF0ZSIsInJlY29tcGVuc2FTY2hlbWFEYiIsImRlc2NyaSIsIlN0cmluZyIsInByaWNlIiwiTnVtYmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSx3QkFBd0IsR0FBRztBQUdwQyxjQUFXLENBQUUsUUFBRixFQUFZLE9BQVosQ0FIeUI7QUFJcEMsVUFBUSxRQUo0QjtBQUtwQyxnQkFBYztBQUNWLGNBQVM7QUFDTCxjQUFTLFFBREo7QUFFTCxxQkFBZ0I7QUFGWCxLQURDO0FBS1YsYUFBUTtBQUNKLGNBQVMsUUFETDtBQUVKLHFCQUFnQjtBQUZaO0FBTEU7QUFMc0IsQ0FBakM7O0FBa0JBLElBQU1DLGtCQUFrQixHQUFHO0FBQzlCQyxFQUFBQSxNQUFNLEVBQUdDLE1BRHFCO0FBRTlCQyxFQUFBQSxLQUFLLEVBQUdDO0FBRnNCLENBQTNCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGVsbFxcUmVwb3NcXGFwaS1tZXJpdGktbW9uZXlcXHNyY1xcYXBpLXYxXFxTY2hlbWFzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJlY29tcGVuc2FTY2hlbWFWYWxpZGF0ZSA9IHtcclxuXHJcblxyXG4gICAgXCJyZXF1aXJlZFwiOlsgXCJkZXNjcmlcIiAsXCJwcmljZVwiIF0sXHJcbiAgICBcInR5cGVcIjogXCJvYmplY3RcIixcclxuICAgIFwicHJvcGVydGllc1wiOiB7XHJcbiAgICAgICAgXCJkZXNjcmlcIjp7XHJcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJzdHJpbmdcIixcclxuICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJkZXNjcmnDp8OjbyBhZGEgcmVjb21wZXNhIGEgc2VyIHJlc2dhdGFkYSBjb20gbW9lZGFzXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIFwicHJpY2VcIjp7XHJcbiAgICAgICAgICAgIFwidHlwZVwiIDogXCJudW1iZXJcIixcclxuICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiIDogXCJxdWFudGlkYWRlIGRlIG1vZWRhcyBuZWNlc3NhcmlhcyBwYXJhIHJlc2dhdGFyIGEgcmVjb21wZW5zYVwiLFxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlY29tcGVuc2FTY2hlbWFEYiA9IHtcclxuICAgIGRlc2NyaSA6IFN0cmluZyxcclxuICAgIHByaWNlIDogTnVtYmVyLFxyXG59IDtcclxuXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "recompensa.schema.js"
      ],
      "names": [
        "recompensaSchemaValidate",
        "recompensaSchemaDb",
        "descri",
        "String",
        "price",
        "Number"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,wBAAwB,GAAG;AAGpC,cAAW,CAAE,QAAF,EAAY,OAAZ,CAHyB;AAIpC,UAAQ,QAJ4B;AAKpC,gBAAc;AACV,cAAS;AACL,cAAS,QADJ;AAEL,qBAAgB;AAFX,KADC;AAKV,aAAQ;AACJ,cAAS,QADL;AAEJ,qBAAgB;AAFZ;AALE;AALsB,CAAjC;;AAkBA,IAAMC,kBAAkB,GAAG;AAC9BC,EAAAA,MAAM,EAAGC,MADqB;AAE9BC,EAAAA,KAAK,EAAGC;AAFsB,CAA3B",
      "sourceRoot": "C:\\Users\\Dell\\Repos\\api-meriti-money\\src\\api-v1\\Schemas",
      "sourcesContent": [
        "export const recompensaSchemaValidate = {\r\n\r\n\r\n    \"required\":[ \"descri\" ,\"price\" ],\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"descri\":{\r\n            \"type\" : \"string\",\r\n            \"description\" : \"descrição ada recompesa a ser resgatada com moedas\"\r\n        },\r\n        \"price\":{\r\n            \"type\" : \"number\",\r\n            \"description\" : \"quantidade de moedas necessarias para resgatar a recompensa\",\r\n        },\r\n\r\n    }\r\n};\r\n\r\nexport const recompensaSchemaDb = {\r\n    descri : String,\r\n    price : Number,\r\n} ;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1560383128376
  }
}